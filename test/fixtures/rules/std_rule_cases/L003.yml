rule: L003

test_reindent_first_line_1:
  fail_str: '     SELECT 1'
  fix_str: SELECT 1

test_reindent_first_line_2:
  # Github Bug #99. Python2 Issues with fixing L003
  fail_str: '  select 1 from tbl;'
  fix_str: select 1 from tbl;

test_identation_of_comments_1:
  # Github Bug #203
  # Comments should be aligned to the following line.
  pass_str: |
    SELECT
        -- Compute the thing
        (a + b) AS c
    FROM
        acceptable_buckets

test_indentation_of_comments_2:
  # Comments should be aligned to the following line.
  pass_str: |
    SELECT
        user_id
    FROM
        age_data
    JOIN
        audience_size
        USING (user_id, list_id)
    -- We LEFT JOIN because blah
    LEFT JOIN
        verts
        USING
            (user_id)

test_tab_indentation:
  # Using tabs as indents works
  fail_str: |
    SELECT
    	a,
    b
    FROM my_tbl

  fix_str: |
    SELECT
    	a,
    	b
    FROM my_tbl

  configs:
    rules:
      indent_unit: tab

test_indented_joins_default:
  # Configurable indents work.
  # a) default
  pass_str: |
    SELECT a, b, c
    FROM my_tbl
    LEFT JOIN another_tbl USING(a)

test_indented_joins_false:
  # b) specific
  pass_str: |
    SELECT a, b, c
    FROM my_tbl
    LEFT JOIN another_tbl USING(a)

  configs:
    indentation:
      indented_joins: false

test_indented_joins_true:
  # c) specific True, but passing
  pass_str: |
    SELECT a, b, c
    FROM my_tbl
        LEFT JOIN another_tbl USING(a)

  configs:
    indentation:
      indented_joins: true

test_indented_joins_true_fix:
  # d) specific True, but failing
  fail_str: |
    SELECT a, b, c
    FROM my_tbl
    LEFT JOIN another_tbl USING(a)

  fix_str: |
    SELECT a, b, c
    FROM my_tbl
        LEFT JOIN another_tbl USING(a)

  configs:
    indentation:
      indented_joins: true

test_indented_joins_false_fix:
  # e) specific False, and failing
  fail_str: |
    SELECT a, b, c
    FROM my_tbl
        LEFT JOIN another_tbl USING(a)

  fix_str: |
    SELECT a, b, c
    FROM my_tbl
    LEFT JOIN another_tbl USING(a)

  configs:
    indentation:
      indented_joins: false

test_indented_from_with_comment:
  pass_str: |
    SELECT *
    FROM
        t1
    -- Comment
    JOIN t2 USING (user_id)

test_indented_from_with_comment_fix:
  fail_str: |
    SELECT *
    FROM
        t1
        -- Comment
    JOIN t2 USING (user_id)

  fix_str: |
    SELECT *
    FROM
        t1
    -- Comment
    JOIN t2 USING (user_id)

# https://github.com/sqlfluff/sqlfluff/issues/643
snowflake_with_indent:
  pass_str: |
    with source_data as (
        select * from {{ source('source_name', 'xxx_yyy_zzz') }}   
    )

    select *
    from source_data
  
  configs:
    core:
      dialect: snowflake

# https://github.com/sqlfluff/sqlfluff/issues/643
bigquery_with_indent:
  pass_str: |
    with source_data as (
        select * from {{ source('source_name', 'xxx_yyy_zzz') }}   
    )

    select *
    from source_data
  
  configs:
    core:
      dialect: bigquery

test_attempted_hanger_fix:
  # It's almost a hanger and so should be corrected to one.
  fail_str: |
    SELECT coalesce(foo,
                  bar)
       FROM tbl

  fix_str: |
    SELECT coalesce(foo,
                    bar)
    FROM tbl

test_possible_hanger_fix:
  # It's not even close to a hanging indent, but we should
  # still attempt this, although this is potentially a questionable
  # fix and could be an approach we change in the future.
  fail_str: |
    SELECT coalesce(foo,
     bar)
       FROM tbl

  fix_str: |
    SELECT coalesce(foo,
                    bar)
    FROM tbl

test_clean_reindent_fix:
  # A "clean" indent is where the previous line ends with an
  # indent token (as per this example). We should use the
  # default approach and indent by 1 step.
  fail_str: |
    SELECT coalesce(
    foo,
                    bar)
       FROM tbl

  fix_str: |
    SELECT coalesce(
        foo,
        bar)
    FROM tbl
