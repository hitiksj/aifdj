rule: L052

test_pass_semi_colon_same_line_default:
  pass_str: |
    SELECT a FROM foo;

test_pass_semi_colon_custom_newline:
  pass_str: |
    SELECT a FROM foo;
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_semi_colon_same_line_custom_newline:
  fail_str: |
    SELECT a
    FROM foo;
  fix_str: |
    SELECT a
    FROM foo
    ;
  configs:
    rules:
      L052:
        multiline_newline: true

test_pass_no_semi_colon_default:
  pass_str: |
    SELECT a FROM foo

test_pass_no_semi_colon_custom_newline:
  pass_str: |
    SELECT a FROM foo
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_no_semi_colon_custom_require:
  fail_str: |
    SELECT a FROM foo
  fix_str: |
    SELECT a FROM foo;
  configs:
    rules:
      L052:
        require_final_semicolon: true

test_fail_no_semi_colon_custom_require_oneline:
  fail_str: |
    SELECT a FROM foo
  fix_str: |
    SELECT a FROM foo;
  configs:
    rules:
      L052:
        require_final_semicolon: true
        multiline_newline: true

test_fail_no_semi_colon_custom_require_multiline:
  fail_str: |
    SELECT a
    FROM foo
  fix_str: |
    SELECT a
    FROM foo
    ;
  configs:
    rules:
      L052:
        require_final_semicolon: true
        multiline_newline: true

test_pass_multi_statement_semi_colon_default:
  pass_str: |
    SELECT a FROM foo;
    SELECT b FROM bar;

test_pass_multi_statement_semi_colon_custom_oneline:
  pass_str: |
    SELECT a FROM foo;
    SELECT b FROM bar;

test_fail_multi_statement_semi_colon_custom_multiline:
  fail_str: |
    SELECT a
    FROM foo;
    SELECT b
    FROM bar;
  fix_str: |
    SELECT a
    FROM foo
    ;
    SELECT b
    FROM bar
    ;
  configs:
    rules:
      L052:
        multiline_newline: true

test_pass_multi_statement_no_trailing_semi_colon_default:
  pass_str: |
    SELECT a FROM foo;
    SELECT b FROM bar

test_pass_multi_statement_no_trailing_semi_colon_custom_require:
  fail_str: |
    SELECT a FROM foo;
    SELECT b FROM bar
  fix_str: |
    SELECT a FROM foo;
    SELECT b FROM bar;
  configs:
    rules:
      L052:
        require_final_semicolon: true

test_fail_multi_statement_no_trailing_semi_colon_custom_require_oneline:
  fail_str: |
    SELECT a FROM foo;
    SELECT b FROM bar
  fix_str: |
    SELECT a FROM foo;
    SELECT b FROM bar;
  configs:
    rules:
      L052:
        require_final_semicolon: true
        multiline_newline: true

test_fail_multi_statement_no_trailing_semi_colon_custom_require_multiline:
  fail_str: |
    SELECT a
    FROM foo;
    SELECT b
    FROM bar
  fix_str: |
    SELECT a
    FROM foo
    ;
    SELECT b
    FROM bar
    ;
  configs:
    rules:
      L052:
        require_final_semicolon: true
        multiline_newline: true

test_fail_space_semi_colon_default:
  fail_str: |
    SELECT a FROM foo  ;
  fix_str: |
    SELECT a FROM foo;

test_fail_newline_semi_colon_default:
  fail_str: |
    SELECT a FROM foo
    ;
  fix_str: |
    SELECT a FROM foo;

test_pass_newline_semi_colon_custom_newline:
  pass_str: |
    SELECT a
    FROM foo
    ;
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_multi_statement_semi_colon_default:
  fail_str: |
    SELECT a FROM foo

    ;
    SELECT b FROM bar    ;
  fix_str: |
    SELECT a FROM foo;
    SELECT b FROM bar;

test_fail_multi_statement_semi_colon_custom_require_multiline:
  fail_str: |
    SELECT a
    FROM foo

    ;
    SELECT b
    FROM bar    ;
  fix_str: |
    SELECT a
    FROM foo
    ;
    SELECT b
    FROM bar
    ;
  configs:
    rules:
      L052:
        require_final_semicolon: true
        multiline_newline: true

test_fail_multiple_newlines_semi_colon_custom_require_newline:
  fail_str: |
    SELECT a
    FROM foo

    ;
  fix_str: |
    SELECT a
    FROM foo
    ;
  configs:
    rules:
      L052:
        require_final_semicolon: true
        multiline_newline: true

test_fail_final_semi_colon_same_line_inline_comment:
  fail_str: |
    SELECT a FROM foo -- inline comment
  fix_str: |
    SELECT a FROM foo; -- inline comment
  configs:
    rules:
      L052:
        require_final_semicolon: true

test_fail_final_semi_colon_same_line_inline_comment_custom_oneline:
  fail_str: |
    SELECT a FROM foo -- inline comment
  fix_str: |
    SELECT a FROM foo; -- inline comment
  configs:
    rules:
      L052:
        require_final_semicolon: true
        multiline_newline: true

test_fail_final_semi_colon_newline_inline_comment_custom_multiline:
  fail_str: |
    SELECT a
    FROM foo -- inline comment
  fix_str: |
    SELECT a
    FROM foo -- inline comment
    ;
  configs:
    rules:
      L052:
        require_final_semicolon: true
        multiline_newline: true

test_fail_same_line_inline_comment:
  fail_str: |
    SELECT a FROM foo -- inline comment
    ;
  fix_str: |
    SELECT a FROM foo; -- inline comment

test_fail_same_line_multiple_inline_comment:
  fail_str: |
    SELECT a FROM foo -- inline comment #1

    -- inline comment #2
    ;
  fix_str: |
    SELECT a FROM foo; -- inline comment #1

    -- inline comment #2

test_pass_newline_inline_comment:
  pass_str: |
    SELECT a
    FROM foo -- inline comment
    ;
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_newline_inline_comment:
  fail_str: |
    SELECT a
    FROM foo -- inline comment

    ;
  fix_str: |
    SELECT a
    FROM foo -- inline comment
    ;
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_newline_multiple_inline_comments_custom_oneline:
  fail_str: |
    SELECT a FROM foo -- inline comment #1

    -- inline comment #2

    ;
  fix_str: |
    SELECT a FROM foo; -- inline comment #1

    -- inline comment #2
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_newline_multiple_inline_comments_custom_multiline:
  fail_str: |
    SELECT a
    FROM foo -- inline comment #1

    -- inline comment #2

    ;
  fix_str: |
    SELECT a
    FROM foo -- inline comment #1
    ;

    -- inline comment #2
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_newline_trailing_inline_comment:
  fail_str: |
    SELECT a
    FROM foo ; -- inline comment
  fix_str: |
    SELECT a
    FROM foo -- inline comment
    ;
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_newline_preceding_block_comment_custom_oneline:
  fail_str: |
    SELECT foo FROM bar /* multiline
    comment
    */
    ;
  fix_str: |
    SELECT foo FROM bar; /* multiline
    comment
    */
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_newline_preceding_block_comment_custom_multiline:
  fail_str: |
    SELECT foo
    FROM bar /* multiline
    comment
    */
    ;
  fix_str: |
    SELECT foo
    FROM bar
    ; /* multiline
    comment
    */
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_newline_trailing_block_comment:
  fail_str: |
    SELECT foo
    FROM bar; /* multiline
    comment
    */
  fix_str: |
    SELECT foo
    FROM bar
    ; /* multiline
    comment
    */
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_newline_block_comment_semi_colon_before:
  fail_str: |
    SELECT foo
    FROM bar;
    /* multiline
    comment
    */
  fix_str: |
    SELECT foo
    FROM bar
    ;
    /* multiline
    comment
    */
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_newline_block_comment_semi_colon_after:
  fail_str: |
    SELECT foo
    FROM bar
    /* multiline
    comment
    */
    ;
  fix_str: |
    SELECT foo
    FROM bar
    ;
    /* multiline
    comment
    */
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_newline_create_table:
  # https://github.com/sqlfluff/sqlfluff/issues/2268
  fail_str: |
    CREATE TABLE my_table (
      id INTEGER
    );
  fix_str: |
    CREATE TABLE my_table (
      id INTEGER
    )
    ;
  configs:
    rules:
      L052:
        multiline_newline: true

test_fail_newline_create_table_inline_comment:
  fail_str: |
    CREATE TABLE my_table (
      id INTEGER
    ); --inline comment
  fix_str: |
    CREATE TABLE my_table (
      id INTEGER
    ) --inline comment
    ;
  configs:
    rules:
      L052:
        multiline_newline: true

test_pass_multiple_semicolons:
  pass_str: |
    SELECT foo FROM bar;;
    SELECT foo FROM bar;
    ;
    ;
    SELECT foo FROM bar;

test_fail_tsql_semicolon_after_each_statement_1:
  fail_str: |
    CREATE FUNCTION dbo.funxn (
        @incoming varchar(50)
    ) RETURNS int
    AS
    BEGIN
        IF 1 = 1 SET @result = 1
        RETURN @result
    END
  fix_str: |
    CREATE FUNCTION dbo.funxn (
        @incoming varchar(50)
    ) RETURNS int
    AS
    BEGIN
        IF 1 = 1 SET @result = 1;
        RETURN @result;
    END;
  configs:
    core:
      dialect: tsql
    rules:
      L052:
        require_final_semicolon: true

test_fail_tsql_semicolon_after_each_statement_2:
  fail_str: |
    CREATE FUNCTION dbo.funxn (
        @incoming varchar(50)
    ) RETURNS int
    AS
    BEGIN
        DECLARE @result int
        IF 1 = 1 SET @result = 1
        ELSE
            BEGIN
                SET @result = 0
            END

        RETURN @result
    END
  fix_str: |
    CREATE FUNCTION dbo.funxn (
        @incoming varchar(50)
    ) RETURNS int
    AS
    BEGIN
        DECLARE @result int;
        IF 1 = 1 SET @result = 1;
        ELSE
            BEGIN
                SET @result = 0;
            END

        RETURN @result;
    END;
  configs:
    core:
      dialect: tsql
    rules:
      L052:
        require_final_semicolon: true

test_fail_tsql_semicolon_after_each_statement_3:
  fail_str: |
    CREATE FUNCTION dbo.funxn (
        @incoming varchar(50)
    ) RETURNS int
    AS
    BEGIN
        DECLARE @result int
        SET @result = 1
    END
  fix_str: |
    CREATE FUNCTION dbo.funxn (
        @incoming varchar(50)
    ) RETURNS int
    AS
    BEGIN
        DECLARE @result int;
        SET @result = 1;
    END;
  configs:
    core:
      dialect: tsql
    rules:
      L052:
        require_final_semicolon: true

test_fail_tsql_semicolon_after_each_statement_4:
  fail_str: |
    CREATE FUNCTION dbo.funxn (
        @incoming varchar(50)
    ) RETURNS int
    AS
    BEGIN
        DECLARE @result int;
        SET @result = 1
    END;
  fix_str: |
    CREATE FUNCTION dbo.funxn (
        @incoming varchar(50)
    ) RETURNS int
    AS
    BEGIN
        DECLARE @result int;
        SET @result = 1;
    END;
  configs:
    core:
      dialect: tsql
    rules:
      L052:
        require_final_semicolon: true

test_fail_tsql_no_semicolon_after_each_statement_2:
  pass_str: |
    CREATE FUNCTION dbo.funxn (
        @incoming varchar(50)
    ) RETURNS int
    AS
    BEGIN
        DECLARE @result int
        IF 1 = 1 SET @result = 1
        ELSE
            BEGIN
                SET @result = 0
            END

        RETURN @result
    END
  configs:
    core:
      dialect: tsql
    rules:
      L052:
        require_final_semicolon: false

test_single_line_comment_tsql_1:
  fail_str: |
    SELECT 1
    from l2

    --Main
    SELECT 2;
  fix_str: |
    SELECT 1
    from l2;

    --Main
    SELECT 2;
  configs:
    core:
      dialect: tsql
    rules:
      L052:
        require_final_semicolon: true

test_single_line_comment_tsql_2:
  fail_str: |
    SELECT 1
    from l2

    --Main
    SELECT 2
    ;
  fix_str: |
    SELECT 1
    from l2
    --Main
    ;
    SELECT 2
    ;

  configs:
    core:
      dialect: tsql
    rules:
      L052:
        require_final_semicolon: true
        multiline_newline: true
