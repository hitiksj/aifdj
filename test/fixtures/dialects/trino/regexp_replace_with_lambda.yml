# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 190e4d9807b6575ec7d095ea537b945ca05dd8756032e18af9fbd795b00dcdaf
file:
  statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: REGEXP_REPLACE
            bracketed:
            - start_bracket: (
            - expression:
                quoted_literal: "'new york'"
            - comma: ','
            - expression:
                quoted_literal: "'(\\w)(\\w*)'"
            - comma: ','
            - expression:
              - column_reference:
                  naked_identifier: x
              - binary_operator: ->
              - function:
                  function_name:
                    function_name_identifier: UPPER
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        naked_identifier: x
                      array_accessor:
                        start_square_bracket: '['
                        numeric_literal: '1'
                        end_square_bracket: ']'
                    end_bracket: )
              - binary_operator:
                - pipe: '|'
                - pipe: '|'
              - function:
                  function_name:
                    function_name_identifier: LOWER
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        naked_identifier: x
                      array_accessor:
                        start_square_bracket: '['
                        numeric_literal: '2'
                        end_square_bracket: ']'
                    end_bracket: )
            - end_bracket: )
  statement_terminator: ;
