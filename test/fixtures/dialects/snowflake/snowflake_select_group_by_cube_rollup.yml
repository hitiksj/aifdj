# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: cb475651f0933043d72b6b34aaa5ee13097eaa2effa6e7b0ba404f9814937999
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - code: name
      - comma: ','
      - code: age
      - comma: ','
      - code: count
      - bracketed:
          start_bracket: (
          raw: '*'
          end_bracket: )
      - code: AS
      - code: record_count
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: people
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - keyword: CUBE
      - bracketed:
        - start_bracket: (
        - column_reference:
            naked_identifier: name
        - comma: ','
        - column_reference:
            naked_identifier: age
        - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - code: name
      - comma: ','
      - code: age
      - comma: ','
      - code: count
      - bracketed:
          start_bracket: (
          raw: '*'
          end_bracket: )
      - code: AS
      - code: record_count
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: people
      groupby_clause:
      - keyword: GROUP
      - keyword: BY
      - keyword: ROLLUP
      - bracketed:
        - start_bracket: (
        - column_reference:
            naked_identifier: name
        - comma: ','
        - column_reference:
            naked_identifier: age
        - end_bracket: )
- statement_terminator: ;
