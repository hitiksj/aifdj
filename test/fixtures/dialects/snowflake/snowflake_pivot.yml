# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 37df5646cd5d4db6264d866fd5aa7909ccfad9e82c47235c53adc53ec510d4ca
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_tbl
          from_pivot_expression:
            keyword: PIVOT
            bracketed:
            - start_bracket: (
            - function:
                function_name:
                  function_name_identifier: min
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      naked_identifier: f_val
                  end_bracket: )
            - keyword: FOR
            - naked_identifier: f_id
            - keyword: IN
            - bracketed:
              - start_bracket: (
              - numeric_literal: '1'
              - comma: ','
              - numeric_literal: '2'
              - end_bracket: )
            - end_bracket: )
          alias_expression:
            keyword: AS
            naked_identifier: f
            bracketed:
              start_bracket: (
              identifier_list:
              - naked_identifier: a
              - comma: ','
              - naked_identifier: b
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_tbl
          from_unpivot_expression:
            keyword: UNPIVOT
            bracketed:
            - start_bracket: (
            - naked_identifier: val
            - keyword: FOR
            - naked_identifier: col_name
            - keyword: IN
            - bracketed:
              - start_bracket: (
              - naked_identifier: a
              - comma: ','
              - naked_identifier: b
              - end_bracket: )
            - end_bracket: )
- statement_terminator: ;
