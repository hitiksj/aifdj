# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 156f248e82d4c734084d5644d7507fa6749e708c86a74e96b066d5712c11b8be
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - code: ticket_id
      - comma: ','
      - code: value
      - raw: ':'
      - code: value
      - code: AS
      - code: uncasted
      - comma: ','
      - code: value
      - raw: ':'
      - code: id
      - raw: '::'
      - code: bigint
      - code: AS
      - code: field_id
      - comma: ','
      - code: value
      - raw: ':'
      - code: value
      - raw: '::'
      - code: STRING
      - code: AS
      - code: field_val
      - comma: ','
      - code: value
      - raw: ':'
      - code: thing
      - start_square_bracket: '['
      - numeric_literal: '4'
      - end_square_bracket: ']'
      - raw: .
      - code: foo
      - code: AS
      - code: another_val
      - comma: ','
      - code: value
      - raw: ':'
      - code: thing
      - start_square_bracket: '['
      - numeric_literal: '4'
      - end_square_bracket: ']'
      - raw: .
      - code: bar
      - raw: .
      - code: baz
      - start_square_bracket: '['
      - numeric_literal: '0'
      - end_square_bracket: ']'
      - raw: .
      - code: foo
      - raw: '::'
      - code: bigint
      - code: AS
      - code: another_val
      - comma: ','
      - code: array_field
      - start_square_bracket: '['
      - numeric_literal: '0'
      - end_square_bracket: ']'
      - raw: .
      - code: array_element_property
      - code: as
      - code: test_array_access
      from_clause:
      - keyword: FROM
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: raw_tickets
      - comma: ','
      - from_expression:
          from_expression_element:
            keyword: lateral
            table_expression:
              function:
                function_name:
                  function_name_identifier: flatten
                bracketed:
                  start_bracket: (
                  snowflake_keyword_expression:
                    parameter: INPUT
                    parameter_assigner: =>
                    column_reference:
                      naked_identifier: custom_fields
                  end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - code: value
      - raw: ':'
      - code: point
      - raw: ':'
      - keyword: from
      - raw: ':'
      - code: latitude
      - raw: '::'
      - code: NUMBER
      - bracketed:
        - start_bracket: (
        - numeric_literal: '10'
        - comma: ','
        - numeric_literal: '6'
        - end_bracket: )
      - code: AS
      - code: lat
      - comma: ','
      - code: value
      - raw: ':'
      - code: point
      - raw: ':'
      - keyword: from
      - raw: ':'
      - code: longitude
      - raw: '::'
      - code: NUMBER
      - bracketed:
        - start_bracket: (
        - numeric_literal: '10'
        - comma: ','
        - numeric_literal: '6'
        - end_bracket: )
      - code: AS
      - code: lng
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: table1
- statement_terminator: ;
