# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 2027251ce0166d9e1ed91a14308fcf2a2268bbac4ca327127c9f73c06f46f4cc
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - code: t
      - raw: .
      - raw: $1
      - comma: ','
      - code: t
      - raw: .
      - raw: $2
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              stage_path: '@mystage1'
              bracketed:
                start_bracket: (
                keyword: file_format
                parameter_assigner: =>
                file_format_segment:
                  object_reference:
                    naked_identifier: myformat
                end_bracket: )
            alias_expression:
              naked_identifier: t
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - code: t
      - raw: .
      - raw: $1
      - comma: ','
      - code: t
      - raw: .
      - raw: $2
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              stage_path: '@mystage1'
              bracketed:
              - start_bracket: (
              - keyword: file_format
              - parameter_assigner: =>
              - file_format_segment:
                  quoted_literal: "'myformat'"
              - comma: ','
              - keyword: pattern
              - parameter_assigner: =>
              - quoted_literal: "'.*data.*[.]csv.gz'"
              - end_bracket: )
            alias_expression:
              naked_identifier: t
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - code: t
      - raw: .
      - raw: $1
      - comma: ','
      - code: t
      - raw: .
      - raw: $2
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              stage_path: '@mystage1'
              bracketed:
              - start_bracket: (
              - keyword: pattern
              - parameter_assigner: =>
              - quoted_literal: "'.*data.*[.]csv.gz'"
              - comma: ','
              - keyword: file_format
              - parameter_assigner: =>
              - file_format_segment:
                  quoted_literal: "'myformat'"
              - end_bracket: )
            alias_expression:
              naked_identifier: t
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - code: t
      - raw: .
      - raw: $1
      - comma: ','
      - code: t
      - raw: .
      - raw: $2
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              stage_path: '@mystage1'
              bracketed:
                start_bracket: (
                keyword: pattern
                parameter_assigner: =>
                quoted_literal: "'.*data.*[.]csv.gz'"
                end_bracket: )
            alias_expression:
              naked_identifier: t
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - code: t
      - raw: .
      - raw: $1
      - comma: ','
      - code: t
      - raw: .
      - raw: $2
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                stage_path: '@mystage1'
            alias_expression:
              naked_identifier: t
- statement_terminator: ;
