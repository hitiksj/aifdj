# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: c26d4a4b3a69c40cbaa668821ce302fcc0e17b3feaa9e92a9dcbf2da1a161ec6
file:
  statement:
    select_statement:
      select_clause:
      - keyword: select
      - code: value
      - code: as
      - code: p_id
      - comma: ','
      - code: name
      - comma: ','
      - code: iff
      - bracketed:
        - start_bracket: (
        - code: rank
        - bracketed:
            start_bracket: (
            end_bracket: )
        - code: over
        - bracketed:
          - start_bracket: (
          - code: partition
          - code: by
          - code: id
          - code: order
          - code: by
          - code: t_id
          - code: desc
          - end_bracket: )
        - raw: '='
        - numeric_literal: '1'
        - comma: ','
        - code: 'true'
        - comma: ','
        - code: 'false'
        - end_bracket: )
      - code: as
      - code: most_recent
      from_clause:
      - keyword: from
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: a
          join_clause:
          - keyword: inner
          - keyword: join
          - from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: b
          - join_on_condition:
              keyword: 'on'
              bracketed:
                start_bracket: (
                expression:
                - column_reference:
                  - naked_identifier: b
                  - dot: .
                  - naked_identifier: c_id
                - comparison_operator:
                    raw_comparison_operator: '='
                - column_reference:
                  - naked_identifier: a
                  - dot: .
                  - naked_identifier: c_id
                end_bracket: )
      - comma: ','
      - from_expression:
          from_expression_element:
            keyword: lateral
            table_expression:
              function:
                function_name:
                  function_name_identifier: flatten
                bracketed:
                  start_bracket: (
                  snowflake_keyword_expression:
                    parameter: input
                    parameter_assigner: =>
                    column_reference:
                    - naked_identifier: b
                    - dot: .
                    - naked_identifier: cool_ids
                  end_bracket: )
