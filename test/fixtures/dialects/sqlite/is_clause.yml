# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 2dbd2c9931c3eac15da53a94cf26cc4a69da3720e2211cd2481a8d79102e2596
file:
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: Repro
    - bracketed:
        start_bracket: (
        column_definition:
        - naked_identifier: col
        - data_type:
            data_type_identifier: TEXT
        - column_constraint_segment:
          - keyword: NOT
          - keyword: 'NULL'
        - column_constraint_segment:
            keyword: CHECK
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: col
                keyword: IS
                function:
                  function_name:
                    function_name_identifier: DATE
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        naked_identifier: col
                    end_bracket: )
              end_bracket: )
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: Repro
    - bracketed:
        start_bracket: (
        column_definition:
        - naked_identifier: col
        - data_type:
            data_type_identifier: TEXT
        - column_constraint_segment:
          - keyword: NOT
          - keyword: 'NULL'
        - column_constraint_segment:
            keyword: CHECK
            bracketed:
              start_bracket: (
              expression:
              - column_reference:
                  naked_identifier: col
              - keyword: IS
              - keyword: NOT
              - function:
                  function_name:
                    function_name_identifier: DATE
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        naked_identifier: col
                    end_bracket: )
              end_bracket: )
        end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: Tab
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: col1
        - keyword: IS
        - keyword: NOT
        - function:
            function_name:
              function_name_identifier: DATE
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: col2
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: Tab
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: col1
        - keyword: IS
        - column_reference:
            naked_identifier: col2
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: Tab
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: col1
        - keyword: IS
        - keyword: NOT
        - column_reference:
            naked_identifier: col2
- statement_terminator: ;
