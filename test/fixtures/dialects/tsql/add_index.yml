# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 56af05bcacbc11b6e52f53d6f419d3e67b1c3dbceb18e26d52f481c30a2e8f24
file:
- batch:
    statement:
      if_then_statement:
        keyword: IF
        expression:
        - keyword: NOT
        - keyword: EXISTS
        - bracketed:
            start_bracket: (
            expression:
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    wildcard_expression:
                      wildcard_identifier:
                        star: '*'
                from_clause:
                  keyword: FROM
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                        - identifier: sys
                        - dot: .
                        - identifier: indexes
                where_clause:
                  keyword: WHERE
                  expression:
                    column_reference:
                      identifier: NAME
                    comparison_operator: '='
                    literal: "'IX_INTER_VIMR_INFECTIOUS_PEOPLE'"
            end_bracket: )
        statement:
          create_index_statement:
          - keyword: CREATE
          - keyword: NONCLUSTERED
          - keyword: INDEX
          - index_reference:
              identifier: IX_INTER_VIMR_INFECTIOUS_PEOPLE
          - keyword: 'ON'
          - table_reference:
            - identifier: dbo
            - dot: .
            - identifier: VIMR_INFECTIOUS_PEOPLE
          - bracketed:
              start_bracket: (
              index_column_definition:
                identifier: DATE_LAST_INSERTED
              end_bracket: )
          - statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
    statement:
      if_then_statement:
        keyword: IF
        expression:
        - keyword: NOT
        - keyword: EXISTS
        - bracketed:
            start_bracket: (
            expression:
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    wildcard_expression:
                      wildcard_identifier:
                        star: '*'
                from_clause:
                  keyword: FROM
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                        - identifier: sys
                        - dot: .
                        - identifier: indexes
                where_clause:
                  keyword: WHERE
                  expression:
                    column_reference:
                      identifier: NAME
                    comparison_operator: '='
                    literal: "'IX_INTER_FOUNDATION_NICE_IC_INTAKE_COUNT'"
            end_bracket: )
        statement:
          create_index_statement:
          - keyword: CREATE
          - keyword: NONCLUSTERED
          - keyword: INDEX
          - index_reference:
              identifier: IX_INTER_FOUNDATION_NICE_IC_INTAKE_COUNT
          - keyword: 'ON'
          - table_reference:
            - identifier: dbo
            - dot: .
            - identifier: FOUNDATION_NICE_IC_INTAKE_COUNT
          - bracketed:
              start_bracket: (
              index_column_definition:
                identifier: DATE_LAST_INSERTED
              end_bracket: )
          - statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
    statement:
      if_then_statement:
        keyword: IF
        expression:
          keyword: EXISTS
          bracketed:
            start_bracket: (
            expression:
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    wildcard_expression:
                      wildcard_identifier:
                        star: '*'
                from_clause:
                  keyword: FROM
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                        - identifier: sys
                        - dot: .
                        - identifier: indexes
                where_clause:
                  keyword: WHERE
                  expression:
                    column_reference:
                      identifier: NAME
                    comparison_operator: '='
                    literal: "'IX_INTER_VIMR_REPRODUCTION_NUMBER'"
            end_bracket: )
        statement:
          create_index_statement:
          - keyword: CREATE
          - keyword: CLUSTERED
          - keyword: INDEX
          - index_reference:
              identifier: IX_INTER_VIMR_REPRODUCTION_NUMBER
          - keyword: 'ON'
          - table_reference:
            - identifier: dbo
            - dot: .
            - identifier: VIMR_INFECTIOUS_PEOPLE
          - bracketed:
              start_bracket: (
              index_column_definition:
                identifier: DATE_LAST_INSERTED
              end_bracket: )
          - statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
    statement:
      create_index_statement:
      - keyword: CREATE
      - keyword: STATISTICS
      - index_reference:
          identifier: Stats_Population
      - keyword: 'ON'
      - table_reference:
        - identifier: '[Reporting]'
        - dot: .
        - identifier: '[Population]'
      - bracketed:
        - start_bracket: (
        - index_column_definition:
            identifier: '[ID]'
        - comma: ','
        - index_column_definition:
            identifier: '[Facility]'
        - comma: ','
        - index_column_definition:
            identifier: '[Population]'
        - end_bracket: )
- go_statement:
    keyword: GO
