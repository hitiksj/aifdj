# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: c91c6e905b04f806c2eb43ea640629011317148dffd603e15310225fb9177788
file:
  batch:
  - statement:
      execute_script_statement:
        keyword: EXEC
        object_reference:
        - quoted_identifier: '[Reporting]'
        - dot: .
        - quoted_identifier: '[Load_CLL]'
  - statement:
      execute_script_statement:
        keyword: EXECUTE
        object_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: ProcTestDefaults
        parameter: '@p2'
        comparison_operator:
          comparison_operator: '='
        quoted_literal: "'A'"
        statement_terminator: ;
  - statement:
      execute_script_statement:
        keyword: EXECUTE
        object_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: ProcTestDefaults
        numeric_literal: '68'
        comma: ','
        quoted_literal: "'B'"
        statement_terminator: ;
  - statement:
      execute_script_statement:
      - keyword: EXECUTE
      - object_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: ProcTestDefaults
      - numeric_literal: '68'
      - comma: ','
      - quoted_literal: "'C'"
      - comma: ','
      - quoted_literal: "'House'"
      - statement_terminator: ;
  - statement:
      execute_script_statement:
      - keyword: EXECUTE
      - object_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: ProcTestDefaults
      - parameter: '@p1'
      - comparison_operator:
          comparison_operator: '='
      - keyword: DEFAULT
      - comma: ','
      - parameter: '@p2'
      - comparison_operator:
          comparison_operator: '='
      - quoted_literal: "'D'"
      - statement_terminator: ;
  - statement:
      execute_script_statement:
      - keyword: EXECUTE
      - object_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: ProcTestDefaults
      - keyword: DEFAULT
      - comma: ','
      - parameter: '@p3'
      - comparison_operator:
          comparison_operator: '='
      - quoted_literal: "'Local'"
      - comma: ','
      - parameter: '@p2'
      - comparison_operator:
          comparison_operator: '='
      - quoted_literal: "'E'"
      - statement_terminator: ;
  - statement:
      execute_script_statement:
      - keyword: EXECUTE
      - object_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: ProcTestDefaults
      - keyword: DEFAULT
      - comma: ','
      - quoted_literal: "'H'"
      - comma: ','
      - keyword: DEFAULT
      - statement_terminator: ;
  - statement:
      execute_script_statement:
      - keyword: EXECUTE
      - object_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: ProcTestDefaults
      - keyword: DEFAULT
      - comma: ','
      - quoted_literal: "'I'"
      - comma: ','
      - parameter: '@p3'
      - comparison_operator:
          comparison_operator: '='
      - keyword: DEFAULT
      - statement_terminator: ;
  - statement:
      execute_script_statement:
      - keyword: EXECUTE
      - object_reference:
          naked_identifier: sp_addextendedproperty
      - parameter: '@name'
      - comparison_operator:
          comparison_operator: '='
      - quoted_literal: "N'MS_Description'"
      - comma: ','
      - parameter: '@value'
      - comparison_operator:
          comparison_operator: '='
      - quoted_literal: "'my text description'"
      - comma: ','
      - parameter: '@level0type'
      - comparison_operator:
          comparison_operator: '='
      - quoted_literal: "N'SCHEMA'"
      - comma: ','
      - parameter: '@level0name'
      - comparison_operator:
          comparison_operator: '='
      - quoted_literal: "N'my_schema_name'"
      - comma: ','
      - parameter: '@level1type'
      - comparison_operator:
          comparison_operator: '='
      - quoted_literal: "N'my_object_type'"
      - comma: ','
      - parameter: '@level1name'
      - comparison_operator:
          comparison_operator: '='
      - quoted_literal: "N'my_object_name'"
  - statement:
      execute_script_statement:
        keyword: EXEC
        parameter: '@pRes'
        comparison_operator:
          comparison_operator: '='
        object_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: ProcTestDefaults
        statement_terminator: ;
  - statement:
      execute_script_statement:
      - keyword: EXEC
      - parameter: '@pRes'
      - comparison_operator:
          comparison_operator: '='
      - object_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: ProcTestDefaults
      - parameter: '@p1'
      - comparison_operator:
          comparison_operator: '='
      - keyword: DEFAULT
      - statement_terminator: ;
  - statement:
      execute_script_statement:
        keyword: EXECUTE
        parameter: '@pRes'
        comparison_operator:
          comparison_operator: '='
        object_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: ProcTestDefaults
        statement_terminator: ;
  - statement:
      execute_script_statement:
      - keyword: EXECUTE
      - parameter: '@pRes'
      - comparison_operator:
          comparison_operator: '='
      - object_reference:
        - naked_identifier: dbo
        - dot: .
        - naked_identifier: ProcTestDefaults
      - parameter: '@p1'
      - comparison_operator:
          comparison_operator: '='
      - keyword: DEFAULT
      - statement_terminator: ;
  - statement:
      declare_segment:
        keyword: DECLARE
        parameter: '@statement'
        data_type:
          data_type_identifier: nvarchar
          bracketed:
            start_bracket: (
            keyword: max
            end_bracket: )
        comparison_operator:
          comparison_operator: '='
        expression:
          quoted_literal: "'SELECT 1'"
  - statement:
      execute_script_statement:
        keyword: EXEC
        bracketed:
          start_bracket: (
          object_reference:
            parameter: '@statement'
          end_bracket: )
