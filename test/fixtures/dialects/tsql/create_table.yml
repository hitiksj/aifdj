# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: cfcae343a1e7dffe16887fb99acfec87e64823d1dbbe32c94bd4a971757073cb
file:
  batch:
  - statement:
      create_table_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - quoted_identifier: '[dbo]'
        - dot: .
        - quoted_identifier: '[EC DC]'
      - bracketed:
        - start_bracket: (
        - column_definition:
            quoted_identifier: '[Column B]'
            data_type:
              data_type_identifier: '[varchar]'
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '100'
                  end_bracket: )
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnC]'
            data_type:
              data_type_identifier: varchar
              bracketed_arguments:
                bracketed:
                  start_bracket: (
                  expression:
                    numeric_literal: '100'
                  end_bracket: )
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnDecimal]'
            data_type:
              data_type_identifier: decimal
              bracketed_arguments:
                bracketed:
                - start_bracket: (
                - expression:
                    numeric_literal: '10'
                - comma: ','
                - expression:
                    numeric_literal: '3'
                - end_bracket: )
        - end_bracket: )
  - statement:
      create_table_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
          naked_identifier: foo
      - bracketed:
        - start_bracket: (
        - column_definition:
            naked_identifier: pk
            data_type:
              data_type_identifier: int
            column_constraint_segment:
            - keyword: PRIMARY
            - keyword: KEY
        - comma: ','
        - column_definition:
            naked_identifier: quoted_name
            data_type:
              quoted_identifier: '[custom udt]'
        - comma: ','
        - column_definition:
            naked_identifier: qualified_name
            data_type:
              naked_identifier: sch
              dot: .
              data_type_identifier: qualified
        - comma: ','
        - column_definition:
            naked_identifier: quoted_qualified
            data_type:
              quoted_identifier: '"my schema"'
              dot: .
              data_type_identifier: qualified
        - comma: ','
        - column_definition:
            naked_identifier: more_quoted
            data_type:
            - quoted_identifier: '"my schema"'
            - dot: .
            - quoted_identifier: '"custom udt"'
        - comma: ','
        - column_definition:
            naked_identifier: quoted_udt
            data_type:
              naked_identifier: sch
              dot: .
              quoted_identifier: '[custom udt]'
        - end_bracket: )
      - statement_terminator: ;
