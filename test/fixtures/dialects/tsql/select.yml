# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 5e8e29e172712caaf198546e2a15103d2798bf997a26a54b207fd56a9f4fe69e
file:
  batch:
    statement:
      select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            expression:
              case_expression:
              - keyword: CASE
              - keyword: WHEN
              - expression:
                - literal: '1'
                - comparison_operator: '='
                - literal: '1'
              - keyword: THEN
              - expression:
                  literal: "'True'"
              - keyword: WHEN
              - expression:
                - literal: '1'
                - comparison_operator: '>'
                - literal: '1'
              - keyword: THEN
              - expression:
                  literal: "'False'"
              - keyword: WHEN
              - expression:
                - literal: '1'
                - comparison_operator: <
                - literal: '1'
              - keyword: THEN
              - expression:
                  literal: "'False'"
              - keyword: WHEN
              - expression:
                - literal: '1'
                - comparison_operator: '>='
                - literal: '1'
              - keyword: THEN
              - expression:
                  literal: "'True'"
              - keyword: WHEN
              - expression:
                - literal: '1'
                - comparison_operator: <=
                - literal: '1'
              - keyword: THEN
              - expression:
                  literal: "'True'"
              - keyword: WHEN
              - expression:
                - literal: '1'
                - comparison_operator: <>
                - literal: '1'
              - keyword: THEN
              - expression:
                  literal: "'False'"
              - keyword: WHEN
              - expression:
                - literal: '1'
                - comparison_operator: '!<'
                - literal: '1'
              - keyword: THEN
              - expression:
                  literal: "'Why is this a thing?'"
              - keyword: WHEN
              - expression:
                - literal: '1'
                - comparison_operator: '!='
                - literal: '1'
              - keyword: THEN
              - expression:
                  literal: "'False'"
              - keyword: WHEN
              - expression:
                - literal: '1'
                - comparison_operator: '!>'
                - literal: '1'
              - keyword: THEN
              - expression:
                  literal: "'NULL Handling, Probably'"
              - keyword: ELSE
              - expression:
                  literal: "'Silly Tests'"
              - keyword: END
        - comma: ','
        - select_clause_element:
            column_reference:
            - identifier: all_pop
            - dot: .
            - identifier: '[Arrival Date]'
        - comma: ','
        - select_clause_element:
            column_reference:
            - identifier: all_pop
            - dot: .
            - identifier: Row#
        - comma: ','
        - select_clause_element:
            column_reference:
            - identifier: all_pop
            - dot: .
            - identifier: b@nanas
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: '[# POAs]'
        - comma: ','
        - select_clause_element:
            literal: "'TSQLs escaping quotes test'"
        - comma: ','
        - select_clause_element:
            literal: "'TSQL''s escaping quotes test'"
        - comma: ','
        - select_clause_element:
            literal: "''"
        - comma: ','
        - select_clause_element:
            literal: "''''"
        - comma: ','
        - select_clause_element:
            function:
            - function_name:
                keyword: ROW_NUMBER
            - bracketed:
                start_bracket: (
                end_bracket: )
            - keyword: OVER
            - bracketed:
                start_bracket: (
                partition_by_clause:
                - keyword: PARTITION
                - keyword: BY
                - column_reference:
                    identifier: '[EventNM]'
                orderby_clause:
                - keyword: ORDER
                - keyword: BY
                - column_reference:
                    identifier: '[DateofEvent]'
                - keyword: desc
                end_bracket: )
            alias_expression:
              keyword: AS
              identifier: '[RN]'
        - comma: ','
        - select_clause_element:
            function:
            - function_name:
                keyword: RANK
            - bracketed:
                start_bracket: (
                end_bracket: )
            - keyword: OVER
            - bracketed:
                start_bracket: (
                partition_by_clause:
                - keyword: PARTITION
                - keyword: BY
                - column_reference:
                    identifier: '[EventNM]'
                orderby_clause:
                - keyword: ORDER
                - keyword: BY
                - column_reference:
                    identifier: '[DateofEvent]'
                - keyword: desc
                end_bracket: )
            alias_expression:
              keyword: AS
              identifier: '[R]'
        - comma: ','
        - select_clause_element:
            function:
            - function_name:
                keyword: DENSE_RANK
            - bracketed:
                start_bracket: (
                end_bracket: )
            - keyword: OVER
            - bracketed:
                start_bracket: (
                partition_by_clause:
                - keyword: PARTITION
                - keyword: BY
                - column_reference:
                    identifier: '[EventNM]'
                orderby_clause:
                - keyword: ORDER
                - keyword: BY
                - column_reference:
                    identifier: '[DateofEvent]'
                - keyword: desc
                end_bracket: )
            alias_expression:
              keyword: AS
              identifier: '[DR]'
        - comma: ','
        - select_clause_element:
            function:
            - function_name:
                keyword: NTILE
            - bracketed:
                start_bracket: (
                literal: '5'
                end_bracket: )
            - keyword: OVER
            - bracketed:
                start_bracket: (
                partition_by_clause:
                - keyword: PARTITION
                - keyword: BY
                - column_reference:
                    identifier: '[EventNM]'
                orderby_clause:
                - keyword: ORDER
                - keyword: BY
                - column_reference:
                    identifier: '[DateofEvent]'
                - keyword: desc
                end_bracket: )
            alias_expression:
              keyword: AS
              identifier: '[NT]'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - identifier: dbo
                - dot: .
                - identifier: all_pop
