# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: a17e3b89c102672383b4474f75262d0001401fb61bbe351de9b694b3d6f02952
file:
  batch:
    statement:
      if_then_statement:
      - keyword: IF
      - expression:
          literal: '1'
          comparison_operator: <=
          bracketed:
            start_bracket: (
            expression:
              select_statement:
                select_clause:
                  keyword: SELECT
                  select_clause_element:
                    column_reference:
                      identifier: Weight
                from_clause:
                  keyword: from
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                          identifier: DimProduct
                where_clause:
                  keyword: WHERE
                  expression:
                    column_reference:
                      identifier: ProductKey
                    comparison_operator: '='
                    literal: '1'
            end_bracket: )
      - begin_end_block:
        - keyword: BEGIN
        - statement:
            select_statement:
              select_clause:
              - keyword: SELECT
              - select_clause_element:
                  column_reference:
                    identifier: ProductKey
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: EnglishDescription
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: Weight
              - comma: ','
              - select_clause_element:
                  literal: "'This product is too heavy to ship and is only available\
                    \ for pickup.'"
                  alias_expression:
                    keyword: AS
                    identifier: ShippingStatus
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        identifier: DimProduct
              where_clause:
                keyword: WHERE
                expression:
                  column_reference:
                    identifier: ProductKey
                  comparison_operator: '='
                  literal: '1'
        - keyword: END
      - keyword: ELSE
      - begin_end_block:
        - keyword: BEGIN
        - statement:
            select_statement:
              select_clause:
              - keyword: SELECT
              - select_clause_element:
                  column_reference:
                    identifier: ProductKey
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: EnglishDescription
              - comma: ','
              - select_clause_element:
                  column_reference:
                    identifier: Weight
              - comma: ','
              - select_clause_element:
                  literal: "'This product is available for shipping or pickup.'"
                  alias_expression:
                    keyword: AS
                    identifier: ShippingStatus
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        identifier: DimProduct
              where_clause:
                keyword: WHERE
                expression:
                  column_reference:
                    identifier: ProductKey
                  comparison_operator: '='
                  literal: '1'
        - keyword: END
