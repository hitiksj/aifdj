# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: b2533ee6f925cd7b21d6150acbe56fdae6a2b46b2654f08c08bf26b7efa7d16d
file:
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - table_reference:
        naked_identifier: experienced_employee_extended
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: experienced_employee
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: GLOBAL
    - keyword: TEMPORARY
    - keyword: VIEW
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - table_reference:
        naked_identifier: experienced_employee
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: ID
      - keyword: COMMENT
      - quoted_literal: "'Unique identification number'"
      - comma: ','
      - column_reference:
          naked_identifier: Name
      - end_bracket: )
    - keyword: COMMENT
    - quoted_literal: "'View for experienced employees'"
    - keyword: TBLPROPERTIES
    - bracketed:
      - start_bracket: (
      - property_name_identifier:
          quoted_identifier: '"key1"'
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: '"val1"'
      - comma: ','
      - property_name_identifier:
          quoted_identifier: '"key2"'
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: '"val2"'
      - end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: ID
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: Name
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: temp2
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: TEMP
    - keyword: VIEW
    - table_reference:
        naked_identifier: experienced_employee_temp
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: experienced_employee
        limit_clause:
          keyword: limit
          numeric_literal: '2'
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: VIEW
    - table_reference:
        naked_identifier: experienced_employee_rep
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: experienced_employee
        limit_clause:
          keyword: limit
          numeric_literal: '2'
- statement_terminator: ;
