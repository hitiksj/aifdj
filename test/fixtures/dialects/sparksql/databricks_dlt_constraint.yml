# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: fd300f1b1bc9dccbe8ecd3468cbdbbdca0735b35f2d8d32cd5cde71a1ab936dd
file:
- statement:
    constraint_statement:
    - keyword: CONSTRAINT
    - object_reference:
        naked_identifier: valid_timestamp
    - keyword: EXPECT
    - bracketed:
        start_bracket: (
        expression:
          column_reference:
            naked_identifier: event_ts
          comparison_operator:
            raw_comparison_operator: '>'
          quoted_literal: "'2012-01-01'"
        end_bracket: )
- statement_terminator: ;
- statement:
    constraint_statement:
    - keyword: CONSTRAINT
    - object_reference:
        naked_identifier: valid_current_page
    - keyword: EXPECT
    - bracketed:
        start_bracket: (
        expression:
        - column_reference:
            naked_identifier: current_page_id
        - keyword: IS
        - keyword: NOT
        - keyword: 'NULL'
        - binary_operator: AND
        - column_reference:
            naked_identifier: current_page_title
        - keyword: IS
        - keyword: NOT
        - keyword: 'NULL'
        end_bracket: )
    - keyword: 'ON'
    - keyword: VIOLATION
    - keyword: DROP
    - keyword: ROW
- statement_terminator: ;
- statement:
    constraint_statement:
    - keyword: CONSTRAINT
    - object_reference:
        naked_identifier: valid_count
    - keyword: EXPECT
    - bracketed:
        start_bracket: (
        expression:
          column_reference:
            naked_identifier: count
          comparison_operator:
            raw_comparison_operator: '>'
          numeric_literal: '0'
        end_bracket: )
    - keyword: 'ON'
    - keyword: VIOLATION
    - keyword: FAIL
    - keyword: UPDATE
- statement_terminator: ;
