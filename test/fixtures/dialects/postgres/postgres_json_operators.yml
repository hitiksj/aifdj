# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: c91c4a9b33edc4620966a318e726661b1c244f15c952f4782cc0adb032f4e194
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: COALESCE
            bracketed:
            - start_bracket: (
            - expression:
                column_reference:
                  identifier: doc
                binary_operator: '#>>'
                literal: "'{fields}'"
            - comma: ','
            - expression:
                literal: "''"
            - end_bracket: )
          alias_expression:
            keyword: AS
            identifier: field
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: mytable
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: doc
        - binary_operator: ->>
        - literal: "'some_field'"
        - comparison_operator: '='
        - literal: "'some_value'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - literal: "'[{\"a\":\"foo\"},{\"b\":\"bar\"},{\"c\":\"baz\"}]'"
          - cast_expression:
              casting_operator: '::'
              data_type:
                keyword: json
          - binary_operator: ->
          - literal: '2'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - literal: "'{\"a\": {\"b\":\"foo\"}}'"
          - cast_expression:
              casting_operator: '::'
              data_type:
                keyword: json
          - binary_operator: ->
          - literal: "'a'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - literal: "'[1,2,3]'"
          - cast_expression:
              casting_operator: '::'
              data_type:
                keyword: json
          - binary_operator: ->>
          - literal: '2'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - literal: "'{\"a\":1,\"b\":2}'"
          - cast_expression:
              casting_operator: '::'
              data_type:
                keyword: json
          - binary_operator: ->>
          - literal: "'b'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - literal: "'{\"a\": {\"b\":{\"c\": \"foo\"}}}'"
          - cast_expression:
              casting_operator: '::'
              data_type:
                keyword: json
          - binary_operator: '#>'
          - literal: "'{a,b}'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - literal: "'{\"a\":[1,2,3],\"b\":[4,5,6]}'"
          - cast_expression:
              casting_operator: '::'
              data_type:
                keyword: json
          - binary_operator: '#>>'
          - literal: "'{a,2}'"
- statement_terminator: ;
