# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: beb61c1eb1b60969bb801f17c7f11c9c65e9124f5c743c444410ebd6565cd5f6
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - datetime_literal:
              datetime_type_identifier:
              - keyword: timestamp
              - keyword: with
              - keyword: time
              - keyword: zone
              quoted_literal: "'2005-04-02 12:00:00-07'"
          - binary_operator: +
          - datetime_literal:
              datetime_type_identifier:
                keyword: interval
              quoted_literal: "'1 day'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: DATEADD
            bracketed:
            - start_bracket: (
            - expression:
                column_reference:
                  naked_identifier: day
            - comma: ','
            - expression:
                numeric_literal:
                  sign_indicator: '-'
                  numeric_literal: '2'
            - comma: ','
            - expression:
                bare_function: current_date
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - datetime_literal:
              datetime_type_identifier:
                keyword: timestamptz
              quoted_literal: "'2013-07-01 12:00:00'"
          - binary_operator: '-'
          - datetime_literal:
              datetime_type_identifier:
                keyword: timestamptz
              quoted_literal: "'2013-03-01 12:00:00'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            numeric_literal: '1.0'
            cast_expression:
              casting_operator: '::'
              data_type:
                keyword: int
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            quoted_literal: "'2015-10-24 16:38:46'"
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: TIMESTAMP
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            quoted_literal: "'2015-10-24 16:38:46'"
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: TIMESTAMP
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                quoted_literal: "'UTC'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            quoted_literal: "'2015-10-24 16:38:46'"
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                - keyword: TIMESTAMP
                - keyword: WITH
                - keyword: TIME
                - keyword: ZONE
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            quoted_literal: "'2015-10-24 16:38:46'"
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                - keyword: TIMESTAMP
                - keyword: WITH
                - keyword: TIME
                - keyword: ZONE
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                quoted_literal: "'UTC'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            quoted_literal: "'2015-10-24 16:38:46'"
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                - keyword: TIMESTAMP
                - keyword: WITHOUT
                - keyword: TIME
                - keyword: ZONE
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            quoted_literal: "'2015-10-24 16:38:46'"
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: TIMESTAMPTZ
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            quoted_literal: "'2015-10-24 16:38:46'"
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: TIMESTAMPTZ
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                quoted_literal: "'UTC'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            datetime_literal:
              datetime_type_identifier:
              - keyword: timestamp
              - keyword: with
              - keyword: time
              - keyword: zone
              quoted_literal: "'2025-11-20 00:00:00+00'"
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                quoted_literal: "'Africa/Cairo'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          datetime_literal:
            datetime_type_identifier:
            - keyword: timestamp
            - keyword: with
            - keyword: time
            - keyword: zone
            quoted_literal: "'2025-11-20 00:00:00'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            datetime_literal:
              datetime_type_identifier:
              - keyword: timestamp
              - keyword: without
              - keyword: time
              - keyword: zone
              quoted_literal: "'2025-11-20 00:00:00'"
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                quoted_literal: "'Africa/Cairo'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            datetime_literal:
              datetime_type_identifier:
              - keyword: timestamp
              - keyword: without
              - keyword: time
              - keyword: zone
              quoted_literal: "'2025-11-20 00:00:00+12'"
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                quoted_literal: "'Africa/Cairo'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          datetime_literal:
            datetime_type_identifier:
            - keyword: timestamp
            - keyword: without
            - keyword: time
            - keyword: zone
            quoted_literal: "'2025-11-20 00:00:00+12'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            datetime_literal:
              datetime_type_identifier:
              - keyword: time
              - keyword: with
              - keyword: time
              - keyword: zone
              quoted_literal: "'00:00:00+00'"
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                quoted_literal: "'Africa/Cairo'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            datetime_literal:
              datetime_type_identifier:
              - keyword: time
              - keyword: without
              - keyword: time
              - keyword: zone
              quoted_literal: "'00:00:00'"
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                quoted_literal: "'Africa/Cairo'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            column_reference:
              naked_identifier: c_timestamp
            time_zone_grammar:
            - keyword: AT
            - keyword: TIME
            - keyword: ZONE
            - expression:
                quoted_literal: "'Africa/Cairo'"
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: t_table
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: c_timestamp
                time_zone_grammar:
                - keyword: AT
                - keyword: TIME
                - keyword: ZONE
                - expression:
                    quoted_literal: "'Africa/Cairo'"
              end_bracket: )
            cast_expression:
              casting_operator: '::'
              data_type:
                datetime_type_identifier:
                  keyword: time
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: t_table
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            column_reference:
              naked_identifier: a
            cast_expression:
              casting_operator: '::'
              data_type:
              - keyword: double
              - keyword: precision
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - naked_identifier: schema1
          - dot: .
          - naked_identifier: table1
          - dot: .
          - naked_identifier: columna
      - comma: ','
      - select_clause_element:
          column_reference:
          - naked_identifier: t
          - dot: .
          - naked_identifier: col2
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: schema1
              - dot: .
              - naked_identifier: table1
          join_clause:
          - keyword: CROSS
          - keyword: JOIN
          - keyword: LATERAL
          - from_expression_element:
              table_expression:
                function:
                  function_name:
                    function_name_identifier: somefunc
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                      - naked_identifier: tb
                      - dot: .
                      - naked_identifier: columnb
                    end_bracket: )
              alias_expression:
                keyword: as
                naked_identifier: t
                bracketed:
                - start_bracket: (
                - parameter: col1
                - data_type:
                    keyword: text
                - comma: ','
                - parameter: col2
                - data_type:
                    keyword: bool
                - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - column_reference:
              naked_identifier: a
          - keyword: COLLATE
          - column_reference:
              quoted_identifier: '"de_DE"'
          - comparison_operator:
              raw_comparison_operator: <
          - column_reference:
              naked_identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            column_reference:
              naked_identifier: a
            comparison_operator:
              raw_comparison_operator: <
            bracketed:
              start_bracket: (
              expression:
                quoted_literal: "'foo'"
                keyword: COLLATE
                column_reference:
                  quoted_identifier: '"fr_FR"'
              end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - column_reference:
              naked_identifier: a
          - comparison_operator:
              raw_comparison_operator: <
          - column_reference:
              naked_identifier: b
          - keyword: COLLATE
          - column_reference:
              quoted_identifier: '"de_DE"'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - column_reference:
              naked_identifier: a
          - keyword: COLLATE
          - column_reference:
              quoted_identifier: '"de_DE"'
          - comparison_operator:
              raw_comparison_operator: <
          - column_reference:
              naked_identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test1
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - expression:
        - column_reference:
            naked_identifier: a
        - binary_operator:
          - pipe: '|'
          - pipe: '|'
        - column_reference:
            naked_identifier: b
        - keyword: COLLATE
        - column_reference:
            quoted_identifier: '"fr_FR"'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test1
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: id
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: start
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: periods
            dot: .
            naked_identifier_all: end
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: periods
- statement_terminator: ;
