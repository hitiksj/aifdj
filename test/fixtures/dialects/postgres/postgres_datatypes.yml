# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: bf914425d3dbe80897d383594c928228d2117e0ed3e9d8389bbe6f110cff11c4
file:
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: a
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: smallint
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: integer
      - comma: ','
      - column_reference:
          identifier: ba
      - data_type:
          keyword: int2
      - comma: ','
      - column_reference:
          identifier: bb
      - data_type:
          keyword: int4
      - comma: ','
      - column_reference:
          identifier: bc
      - data_type:
          keyword: int8
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          keyword: bigint
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
          keyword: real
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
        - keyword: double
        - keyword: precision
      - comma: ','
      - column_reference:
          identifier: f
      - data_type:
          keyword: smallserial
      - comma: ','
      - column_reference:
          identifier: g
      - data_type:
          keyword: serial
      - comma: ','
      - column_reference:
          identifier: ga
      - data_type:
          keyword: serial2
      - comma: ','
      - column_reference:
          identifier: gb
      - data_type:
          keyword: serial4
      - comma: ','
      - column_reference:
          identifier: gc
      - data_type:
          keyword: serial8
      - comma: ','
      - column_reference:
          identifier: h
      - data_type:
          keyword: bigserial
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: b
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: float
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: float
          bracketed:
            start_bracket: (
            literal: '24'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          keyword: float4
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
          keyword: float8
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: c
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: numeric
      - comma: ','
      - column_reference:
          identifier: aa
      - data_type:
          keyword: decimal
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: numeric
          bracketed:
            start_bracket: (
            literal: '7'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: ba
      - data_type:
          keyword: decimal
          bracketed:
            start_bracket: (
            literal: '7'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          keyword: numeric
          bracketed:
          - start_bracket: (
          - literal: '7'
          - comma: ','
          - literal: '2'
          - end_bracket: )
      - comma: ','
      - column_reference:
          identifier: ca
      - data_type:
          keyword: decimal
          bracketed:
          - start_bracket: (
          - literal: '7'
          - comma: ','
          - literal: '2'
          - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: d
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: a
        data_type:
          keyword: money
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: e
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          keyword: char
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          keyword: char
          bracketed:
            start_bracket: (
            literal: '7'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          keyword: character
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
          keyword: character
          bracketed:
            start_bracket: (
            literal: '5'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
        - keyword: character
        - keyword: varying
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
        - keyword: character
        - keyword: varying
        - bracketed:
            start_bracket: (
            literal: '8'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: f
      - data_type:
          keyword: varchar
          bracketed:
            start_bracket: (
            literal: '9'
            end_bracket: )
      - comma: ','
      - column_reference:
          identifier: g
      - data_type:
          keyword: varchar
      - comma: ','
      - column_reference:
          identifier: h
      - data_type:
          keyword: text
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: f
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: a
        data_type:
          keyword: bytea
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: g
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          datetime_type_identifier:
            keyword: date
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          datetime_type_identifier:
            keyword: interval
            bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          datetime_type_identifier:
            keyword: time
            bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
          datetime_type_identifier:
          - keyword: time
          - bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
          - keyword: with
          - keyword: time
          - keyword: zone
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
          datetime_type_identifier:
          - keyword: time
          - bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
          - keyword: without
          - keyword: time
          - keyword: zone
      - comma: ','
      - column_reference:
          identifier: f
      - data_type:
          datetime_type_identifier:
            keyword: timestamp
            bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
      - comma: ','
      - column_reference:
          identifier: g
      - data_type:
          datetime_type_identifier:
          - keyword: timestamp
          - bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
          - keyword: with
          - keyword: time
          - keyword: zone
      - comma: ','
      - column_reference:
          identifier: h
      - data_type:
          datetime_type_identifier:
          - keyword: timestamp
          - bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
          - keyword: without
          - keyword: time
          - keyword: zone
      - comma: ','
      - column_reference:
          identifier: i
      - data_type:
          datetime_type_identifier:
            keyword: timetz
      - comma: ','
      - column_reference:
          identifier: j
      - data_type:
          datetime_type_identifier:
            keyword: timetz
            bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
      - comma: ','
      - column_reference:
          identifier: k
      - data_type:
          datetime_type_identifier:
            keyword: timestamptz
      - comma: ','
      - column_reference:
          identifier: l
      - data_type:
          datetime_type_identifier:
            keyword: timestamptz
            bracketed:
              start_bracket: (
              literal: '4'
              end_bracket: )
      - end_bracket: )
- statement_terminator: ;
