# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: b52f94d6189b518815f0ab38c9a623899123c23bf3e6a7a98647d57aecca1640
file:
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: start_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: end_date
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test_overlaps
      where_clause:
        keyword: where
        expression:
          bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: start_date
          - comma: ','
          - column_reference:
              naked_identifier: end_date
          - end_bracket: )
      overlaps_clause:
        keyword: overlaps
        bracketed:
        - start_bracket: (
        - datetime_literal:
            datetime_type_identifier:
              keyword: DATE
            quoted_literal: "'2023-02-15'"
        - comma: ','
        - datetime_literal:
            datetime_type_identifier:
              keyword: DATE
            quoted_literal: "'2023-03-15'"
        - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: start_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: end_date
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: test_overlaps
      where_clause:
        keyword: where
        expression:
          bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: start_date
          - comma: ','
          - column_reference:
              naked_identifier: end_date
          - end_bracket: )
      overlaps_clause:
        keyword: overlaps
        bracketed:
        - start_bracket: (
        - datetime_literal:
            quoted_literal: "'2023-02-15'"
        - comma: ','
        - datetime_literal:
            quoted_literal: "'2023-03-15'"
        - end_bracket: )
- statement_terminator: ;
