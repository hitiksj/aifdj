# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 82420c47eff71f49fb5afae6c9ada93501734121720bfe272ea542a07bc1c12b
file:
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: a
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          data_type_identifier:
            keyword: smallint
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          data_type_identifier:
            keyword: integer
      - comma: ','
      - column_reference:
          identifier: ba
      - data_type:
          data_type_identifier:
            keyword: int2
      - comma: ','
      - column_reference:
          identifier: bb
      - data_type:
          data_type_identifier:
            keyword: int4
      - comma: ','
      - column_reference:
          identifier: bc
      - data_type:
          data_type_identifier:
            keyword: int8
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          data_type_identifier:
            keyword: bigint
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
          data_type_identifier:
            keyword: real
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
          data_type_identifier:
          - keyword: double
          - keyword: precision
      - comma: ','
      - column_reference:
          identifier: f
      - data_type:
          data_type_identifier:
            keyword: smallserial
      - comma: ','
      - column_reference:
          identifier: g
      - data_type:
          data_type_identifier:
            keyword: serial
      - comma: ','
      - column_reference:
          identifier: ga
      - data_type:
          data_type_identifier:
            keyword: serial2
      - comma: ','
      - column_reference:
          identifier: gb
      - data_type:
          data_type_identifier:
            keyword: serial4
      - comma: ','
      - column_reference:
          identifier: gc
      - data_type:
          data_type_identifier:
            keyword: serial8
      - comma: ','
      - column_reference:
          identifier: h
      - data_type:
          data_type_identifier:
            keyword: bigserial
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
        identifier: b
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: a
      - data_type:
          data_type_identifier:
            keyword: float
      - comma: ','
      - column_reference:
          identifier: b
      - data_type:
          data_type_identifier:
            keyword: float
            bracketed:
              start_bracket: (
              literal: '24'
              end_bracket: )
      - comma: ','
      - column_reference:
          identifier: c
      - data_type:
          data_type_identifier:
            keyword: float4
      - comma: ','
      - column_reference:
          identifier: d
      - data_type:
          data_type_identifier:
            keyword: float4
            bracketed:
              start_bracket: (
              literal: '12'
              end_bracket: )
      - comma: ','
      - column_reference:
          identifier: e
      - data_type:
          data_type_identifier:
            keyword: float8
      - comma: ','
      - column_reference:
          identifier: f
      - data_type:
          data_type_identifier:
            keyword: float8
            bracketed:
              start_bracket: (
              literal: '12'
              end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: create
    - raw: table
    - raw: c
    - bracketed:
      - start_bracket: (
      - raw: a
      - raw: numeric
      - comma: ','
      - raw: aa
      - raw: decimal
      - comma: ','
      - raw: b
      - raw: numeric
      - bracketed:
          start_bracket: (
          raw: '7'
          end_bracket: )
      - comma: ','
      - raw: ba
      - raw: decimal
      - bracketed:
          start_bracket: (
          raw: '7'
          end_bracket: )
      - comma: ','
      - raw: c
      - raw: numeric
      - bracketed:
        - start_bracket: (
        - raw: '7'
        - comma: ','
        - raw: '2'
        - end_bracket: )
      - comma: ','
      - raw: ca
      - raw: decimal
      - bracketed:
        - start_bracket: (
        - raw: '7'
        - comma: ','
        - raw: '2'
        - end_bracket: )
      - end_bracket: )
- statement_terminator: ;
