# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 2fd22465fd9f2536786679db1dd1683e0ed247a44f20c469d12c8975d08fd304
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - function:
              function_name:
                function_name_identifier: CAST
              bracketed:
                start_bracket: (
                expression:
                  null_literal: 'null'
                keyword: AS
                data_type:
                  primitive_type:
                    keyword: boolean
                end_bracket: )
          - binary_operator: OR
          - function:
              function_name:
                function_name_identifier: CAST
              bracketed:
                start_bracket: (
                expression:
                  null_literal: 'null'
                keyword: AS
                data_type:
                  primitive_type:
                    keyword: boolean
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            function:
              function_name:
                function_name_identifier: CAST
              bracketed:
                start_bracket: (
                expression:
                  null_literal: 'null'
                keyword: AS
                data_type:
                  primitive_type:
                    keyword: boolean
                end_bracket: )
            binary_operator: OR
            boolean_literal: 'false'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            function:
              function_name:
                function_name_identifier: CAST
              bracketed:
                start_bracket: (
                expression:
                  null_literal: 'null'
                keyword: AS
                data_type:
                  primitive_type:
                    keyword: boolean
                end_bracket: )
            binary_operator: OR
            boolean_literal: 'true'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: least
            bracketed:
            - start_bracket: (
            - expression:
                numeric_literal: '1'
            - comma: ','
            - expression:
                numeric_literal: '2'
            - comma: ','
            - expression:
                numeric_literal: '3'
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: greatest
            bracketed:
            - start_bracket: (
            - expression:
                numeric_literal: '1'
            - comma: ','
            - expression:
                numeric_literal: '2'
            - comma: ','
            - expression:
                numeric_literal: '3'
            - end_bracket: )
- statement_terminator: ;
