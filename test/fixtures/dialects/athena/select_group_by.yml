# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: dfb2eb0b4755404c4cf74401fb80e590859e7730b34af7018a289d2999cefd3f
file:
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: as_of_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: channel
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: sum
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: total_count
              end_bracket: )
          alias_expression:
            keyword: as
            naked_identifier: cnt
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: agg
              - dot: .
              - naked_identifier: aggregate_total
      groupby_clause:
      - keyword: group
      - keyword: by
      - cube_rollup_clause:
          keyword: cube
          bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: as_of_date
          - comma: ','
          - column_reference:
              naked_identifier: channel
          - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: as_of_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: channel
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: sum
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: total_count
              end_bracket: )
          alias_expression:
            keyword: as
            naked_identifier: cnt
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: agg
              - dot: .
              - naked_identifier: aggregate_total
      groupby_clause:
      - keyword: group
      - keyword: by
      - cube_rollup_clause:
          keyword: rollup
          bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: as_of_date
          - comma: ','
          - column_reference:
              naked_identifier: channel
          - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: as_of_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: channel
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: sum
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: total_count
              end_bracket: )
          alias_expression:
            keyword: as
            naked_identifier: cnt
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: agg
              - dot: .
              - naked_identifier: aggregate_total
      groupby_clause:
      - keyword: group
      - keyword: by
      - grouping_sets_clause:
        - keyword: grouping
        - keyword: sets
        - bracketed:
          - start_bracket: (
          - column_reference:
              naked_identifier: as_of_date
          - comma: ','
          - column_reference:
              naked_identifier: channel
          - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: as_of_date
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: channel
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: sum
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: total_count
              end_bracket: )
          alias_expression:
            keyword: as
            naked_identifier: cnt
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: agg
              - dot: .
              - naked_identifier: aggregate_total
      groupby_clause:
      - keyword: group
      - keyword: by
      - grouping_sets_clause:
        - keyword: grouping
        - keyword: sets
        - bracketed:
          - start_bracket: (
          - bracketed:
            - start_bracket: (
            - column_reference:
                naked_identifier: as_of_date
            - comma: ','
            - column_reference:
                naked_identifier: channel
            - end_bracket: )
          - comma: ','
          - bracketed:
              start_bracket: (
              column_reference:
                naked_identifier: as_of_date
              end_bracket: )
          - comma: ','
          - bracketed:
              start_bracket: (
              end_bracket: )
          - end_bracket: )
- statement_terminator: ;
