# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 64cf8297184282cb3fec0ffb6035638d63cd4a5d4dd61055faf7b4df7ed9028c
file:
- statement:
    create_table_statement:
    - keyword: create
    - keyword: table
    - table_reference:
      - naked_identifier: my_database
      - dot: .
      - naked_identifier: my_table
    - bracketed:
      - start_bracket: (
      - column_definition:
          naked_identifier: field_1
          data_type:
            primitive_type:
              keyword: string
      - comma: ','
      - column_definition:
          naked_identifier: field_2
          data_type:
            primitive_type:
              keyword: int
      - comma: ','
      - column_definition:
          naked_identifier: field_3
          data_type:
            primitive_type:
              keyword: float
      - end_bracket: )
    - keyword: PARTITIONED
    - keyword: BY
    - bracketed:
        start_bracket: (
        naked_identifier: field_1
        end_bracket: )
    - keyword: LOCATION
    - quoted_literal: "'s3://athena-examples-myregion/my_table/'"
    - keyword: TBLPROPERTIES
    - bracketed:
      - start_bracket: (
      - quoted_literal: "'table_type'"
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'ICEBERG'"
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        naked_identifier: iceberg_table
    - keyword: WITH
    - bracketed:
      - start_bracket: (
      - keyword: format
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'PARQUET'"
      - comma: ','
      - keyword: table_type
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'ICEBERG'"
      - comma: ','
      - keyword: partitioning
      - comparison_operator:
          raw_comparison_operator: '='
      - typed_array_literal:
          array_type:
            keyword: ARRAY
          array_literal:
            start_square_bracket: '['
            quoted_literal: "'column_name'"
            end_square_bracket: ']'
      - comma: ','
      - keyword: external_location
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'s3://DOC-EXAMPLE-BUCKET/tables/iceberg_table/'"
      - end_bracket: )
    - keyword: AS
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: table_name
- statement_terminator: ;
