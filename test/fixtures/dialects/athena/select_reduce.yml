# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: bd8f63b8580d81424237ee5a89575371104067e2905c93c253007b13114044e2
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: reduce
            bracketed:
            - start_bracket: (
            - expression:
                array_literal:
                  keyword: ARRAY
                  start_square_bracket: '['
                  end_square_bracket: ']'
            - comma: ','
            - expression:
                literal: '0'
            - comma: ','
            - expression:
              - bracketed:
                - start_bracket: (
                - column_reference:
                    naked_identifier: s
                - comma: ','
                - column_reference:
                    naked_identifier: x
                - end_bracket: )
              - binary_operator: ->
              - column_reference:
                  naked_identifier: s
              - binary_operator: +
              - column_reference:
                  naked_identifier: x
            - comma: ','
            - expression:
              - column_reference:
                  naked_identifier: s
              - binary_operator: ->
              - column_reference:
                  naked_identifier: s
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: reduce
            bracketed:
            - start_bracket: (
            - expression:
                array_literal:
                - keyword: ARRAY
                - start_square_bracket: '['
                - literal: '5'
                - comma: ','
                - literal: '20'
                - comma: ','
                - literal: '50'
                - end_square_bracket: ']'
            - comma: ','
            - expression:
                literal: '0'
            - comma: ','
            - expression:
              - bracketed:
                - start_bracket: (
                - column_reference:
                    naked_identifier: s
                - comma: ','
                - column_reference:
                    naked_identifier: x
                - end_bracket: )
              - binary_operator: ->
              - column_reference:
                  naked_identifier: s
              - binary_operator: +
              - column_reference:
                  naked_identifier: x
            - comma: ','
            - expression:
              - column_reference:
                  naked_identifier: s
              - binary_operator: ->
              - column_reference:
                  naked_identifier: s
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: reduce
            bracketed:
            - start_bracket: (
            - expression:
                array_literal:
                - keyword: ARRAY
                - start_square_bracket: '['
                - literal: '5'
                - comma: ','
                - literal: '20'
                - comma: ','
                - null_literal: 'NULL'
                - comma: ','
                - literal: '50'
                - end_square_bracket: ']'
            - comma: ','
            - expression:
                literal: '0'
            - comma: ','
            - expression:
              - bracketed:
                - start_bracket: (
                - column_reference:
                    naked_identifier: s
                - comma: ','
                - column_reference:
                    naked_identifier: x
                - end_bracket: )
              - binary_operator: ->
              - column_reference:
                  naked_identifier: s
              - binary_operator: +
              - column_reference:
                  naked_identifier: x
            - comma: ','
            - expression:
              - column_reference:
                  naked_identifier: s
              - binary_operator: ->
              - column_reference:
                  naked_identifier: s
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: reduce
            bracketed:
            - start_bracket: (
            - expression:
                array_literal:
                - keyword: ARRAY
                - start_square_bracket: '['
                - literal: '5'
                - comma: ','
                - literal: '20'
                - comma: ','
                - null_literal: 'NULL'
                - comma: ','
                - literal: '50'
                - end_square_bracket: ']'
            - comma: ','
            - expression:
                literal: '0'
            - comma: ','
            - expression:
              - bracketed:
                - start_bracket: (
                - column_reference:
                    naked_identifier: s
                - comma: ','
                - column_reference:
                    naked_identifier: x
                - end_bracket: )
              - binary_operator: ->
              - column_reference:
                  naked_identifier: s
              - binary_operator: +
              - function:
                  function_name:
                    function_name_identifier: COALESCE
                  bracketed:
                  - start_bracket: (
                  - expression:
                      column_reference:
                        naked_identifier: x
                  - comma: ','
                  - expression:
                      literal: '0'
                  - end_bracket: )
            - comma: ','
            - expression:
              - column_reference:
                  naked_identifier: s
              - binary_operator: ->
              - column_reference:
                  naked_identifier: s
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: reduce
            bracketed:
            - start_bracket: (
            - expression:
                array_literal:
                - keyword: ARRAY
                - start_square_bracket: '['
                - literal: '5'
                - comma: ','
                - literal: '20'
                - comma: ','
                - null_literal: 'NULL'
                - comma: ','
                - literal: '50'
                - end_square_bracket: ']'
            - comma: ','
            - expression:
                literal: '0'
            - comma: ','
            - expression:
                bracketed:
                - start_bracket: (
                - column_reference:
                    naked_identifier: s
                - comma: ','
                - column_reference:
                    naked_identifier: x
                - end_bracket: )
                binary_operator: ->
                function:
                  function_name:
                    function_name_identifier: IF
                  bracketed:
                  - start_bracket: (
                  - expression:
                    - column_reference:
                        naked_identifier: x
                    - keyword: IS
                    - keyword: 'NULL'
                  - comma: ','
                  - expression:
                      column_reference:
                        naked_identifier: s
                  - comma: ','
                  - expression:
                    - column_reference:
                        naked_identifier: s
                    - binary_operator: +
                    - column_reference:
                        naked_identifier: x
                  - end_bracket: )
            - comma: ','
            - expression:
              - column_reference:
                  naked_identifier: s
              - binary_operator: ->
              - column_reference:
                  naked_identifier: s
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: reduce
            bracketed:
            - start_bracket: (
            - expression:
                array_literal:
                - keyword: ARRAY
                - start_square_bracket: '['
                - literal: '2147483647'
                - comma: ','
                - literal: '1'
                - end_square_bracket: ']'
            - comma: ','
            - expression:
                function:
                  function_name:
                    function_name_identifier: CAST
                  bracketed:
                    start_bracket: (
                    expression:
                      literal: '0'
                    keyword: AS
                    data_type:
                      primitive_type:
                        keyword: BIGINT
                    end_bracket: )
            - comma: ','
            - expression:
              - bracketed:
                - start_bracket: (
                - column_reference:
                    naked_identifier: s
                - comma: ','
                - column_reference:
                    naked_identifier: x
                - end_bracket: )
              - binary_operator: ->
              - column_reference:
                  naked_identifier: s
              - binary_operator: +
              - column_reference:
                  naked_identifier: x
            - comma: ','
            - expression:
              - column_reference:
                  naked_identifier: s
              - binary_operator: ->
              - column_reference:
                  naked_identifier: s
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: reduce
            bracketed:
            - start_bracket: (
            - expression:
                array_literal:
                - keyword: ARRAY
                - start_square_bracket: '['
                - literal: '5'
                - comma: ','
                - literal: '6'
                - comma: ','
                - literal: '10'
                - comma: ','
                - literal: '20'
                - end_square_bracket: ']'
            - comma: ','
            - expression:
                function:
                  function_name:
                    function_name_identifier: CAST
                  bracketed:
                    start_bracket: (
                    expression:
                      function:
                        function_name:
                          function_name_identifier: ROW
                        bracketed:
                        - start_bracket: (
                        - expression:
                            literal: '0.0'
                        - comma: ','
                        - expression:
                            literal: '0'
                        - end_bracket: )
                    keyword: AS
                    data_type:
                      keyword: ROW
                      bracketed:
                      - start_bracket: (
                      - naked_identifier: sum
                      - data_type:
                          primitive_type:
                            keyword: DOUBLE
                      - comma: ','
                      - naked_identifier: count
                      - data_type:
                          primitive_type:
                            keyword: INTEGER
                      - end_bracket: )
                    end_bracket: )
            - comma: ','
            - expression:
                bracketed:
                - start_bracket: (
                - column_reference:
                    naked_identifier: s
                - comma: ','
                - column_reference:
                    naked_identifier: x
                - end_bracket: )
                binary_operator: ->
                function:
                  function_name:
                    function_name_identifier: CAST
                  bracketed:
                    start_bracket: (
                    expression:
                      function:
                        function_name:
                          function_name_identifier: ROW
                        bracketed:
                        - start_bracket: (
                        - expression:
                          - column_reference:
                              naked_identifier: x
                          - binary_operator: +
                          - column_reference:
                            - naked_identifier: s
                            - dot: .
                            - naked_identifier: sum
                        - comma: ','
                        - expression:
                            column_reference:
                            - naked_identifier: s
                            - dot: .
                            - naked_identifier: count
                            binary_operator: +
                            literal: '1'
                        - end_bracket: )
                    keyword: AS
                    data_type:
                      keyword: ROW
                      bracketed:
                      - start_bracket: (
                      - naked_identifier: sum
                      - data_type:
                          primitive_type:
                            keyword: DOUBLE
                      - comma: ','
                      - naked_identifier: count
                      - data_type:
                          primitive_type:
                            keyword: INTEGER
                      - end_bracket: )
                    end_bracket: )
            - comma: ','
            - expression:
                column_reference:
                  naked_identifier: s
                binary_operator: ->
                function:
                  function_name:
                    function_name_identifier: IF
                  bracketed:
                  - start_bracket: (
                  - expression:
                      column_reference:
                      - naked_identifier: s
                      - dot: .
                      - naked_identifier: count
                      comparison_operator:
                        raw_comparison_operator: '='
                      literal: '0'
                  - comma: ','
                  - expression:
                      null_literal: 'NULL'
                  - comma: ','
                  - expression:
                    - column_reference:
                      - naked_identifier: s
                      - dot: .
                      - naked_identifier: sum
                    - binary_operator: /
                    - column_reference:
                      - naked_identifier: s
                      - dot: .
                      - naked_identifier: count
                  - end_bracket: )
            - end_bracket: )
- statement_terminator: ;
