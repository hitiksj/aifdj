# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 9604c223b4ca69bbf13fadfc3a01dd514276f7e1cf83d71699ee2dcdeccaa7b9
file:
- statement:
    values_clause:
    - keyword: VALUES
    - keyword: ROW
    - bracketed:
      - start_bracket: (
      - expression:
          literal: "'a'"
      - comma: ','
      - expression:
          literal: '1'
      - end_bracket: )
    - comma: ','
    - keyword: ROW
    - bracketed:
      - start_bracket: (
      - expression:
          literal: "'b'"
      - comma: ','
      - expression:
          literal: '2'
      - end_bracket: )
- statement_terminator: ;
- statement:
    values_clause:
    - keyword: VALUES
    - keyword: ROW
    - bracketed:
      - start_bracket: (
      - expression:
          literal: "'a'"
      - comma: ','
      - expression:
          literal: '1'
      - end_bracket: )
    - comma: ','
    - keyword: ROW
    - bracketed:
      - start_bracket: (
      - expression:
          function:
            function_name:
              function_name_identifier: upper
            bracketed:
              start_bracket: (
              expression:
                literal: "'b'"
              end_bracket: )
      - comma: ','
      - expression:
        - literal: '2'
        - binary_operator: +
        - literal: '1'
      - end_bracket: )
- statement_terminator: ;
- statement:
    values_clause:
    - keyword: VALUES
    - keyword: ROW
    - bracketed:
      - start_bracket: (
      - expression:
          bare_function: CURRENT_DATE
      - comma: ','
      - expression:
          literal: '1'
      - end_bracket: )
    - comma: ','
    - keyword: ROW
    - bracketed:
      - start_bracket: (
      - expression:
          interval_expression:
            keyword: INTERVAL
            expression:
              literal: '10'
            date_part: MINUTE
      - comma: ','
      - expression:
        - literal: '2'
        - binary_operator: +
        - literal: '1'
      - end_bracket: )
- statement_terminator: ;
