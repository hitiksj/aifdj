# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: cb4ad01f4d7563f20a62b8a27e3708859df815a39742f723ae5aee1a8ee9ccc1
file:
- statement:
    set_statement:
      keyword: set
      variable: '@abc'
      comparison_operator:
        comparison_operator: '='
      expression:
      - numeric_literal: '1'
      - binary_operator: +
      - numeric_literal: '2'
- statement_terminator: ;
- statement:
    set_statement:
      keyword: set
      variable: '@abc'
      comparison_operator:
        comparison_operator: '='
      expression:
        bracketed:
          start_bracket: (
          expression:
            select_statement:
              select_clause:
                keyword: select
                select_clause_element:
                  numeric_literal: '1'
          end_bracket: )
- statement_terminator: ;
- statement:
    set_statement:
      keyword: SET
      variable: '@id'
      comparison_operator:
        comparison_operator: '='
      expression:
        bracketed:
          start_bracket: (
          expression:
            select_statement:
              select_clause:
                keyword: SELECT
                select_clause_element:
                  column_reference:
                    naked_identifier: id
              from_clause:
                keyword: FROM
                from_expression:
                  from_expression_element:
                    table_expression:
                      table_reference:
                        naked_identifier: table1
              where_clause:
                keyword: WHERE
                expression:
                  column_reference:
                    naked_identifier: field
                  comparison_operator:
                    comparison_operator: '='
                  boolean_literal: 'TRUE'
              limit_clause:
                keyword: LIMIT
                numeric_literal: '1'
          end_bracket: )
- statement_terminator: ;
