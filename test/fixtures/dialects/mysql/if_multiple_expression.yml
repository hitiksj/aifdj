# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 8a8d77f4f0c9f254369f98c73477b4be26da248ccb5ab16e2dc5d96655b5ca2f
file:
- statement:
    if_then_statement:
    - keyword: if
    - expression:
        bracketed:
          start_bracket: (
          expression:
          - bracketed:
              start_bracket: (
              expression:
                select_statement:
                  select_clause:
                    keyword: select
                    select_clause_element:
                      function:
                        function_name:
                          function_name_identifier: count
                        bracketed:
                          start_bracket: (
                          star: '*'
                          end_bracket: )
                  from_clause:
                    keyword: from
                    from_expression:
                      from_expression_element:
                        table_expression:
                          table_reference:
                            naked_identifier: table1
              end_bracket: )
          - comparison_operator:
              raw_comparison_operator: '='
          - literal: '0'
          - binary_operator: and
          - column_reference:
              naked_identifier: x
          - comparison_operator:
              raw_comparison_operator: '='
          - literal: '1'
          end_bracket: )
    - keyword: then
    - statement:
        set_statement:
          keyword: set
          variable: '@errmsg'
          comparison_operator:
            raw_comparison_operator: '='
          literal: "''"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          literal: '1'
- statement_terminator: ;
- statement:
    if_then_statement:
    - keyword: end
    - keyword: if
- statement_terminator: ;
