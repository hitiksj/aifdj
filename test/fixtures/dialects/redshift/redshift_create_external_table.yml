# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 456873dd504516c2ecdd728633df297a1bcf8b9791f98ecd4262a3a493cf3de1
file:
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: col1
        data_type:
          data_type_identifier: INTEGER
        end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: PARQUET
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          data_type_identifier: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          data_type_identifier: STRING
      - end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: PARQUET
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          data_type_identifier: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          data_type_identifier: STRING
      - end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: ORC
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          data_type_identifier: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          data_type_identifier: STRING
      - end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: AVRO
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          data_type_identifier: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          data_type_identifier: STRING
      - end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: TEXTFILE
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          data_type_identifier: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          data_type_identifier: STRING
      - end_bracket: )
    - partitioned_by_segment:
      - keyword: PARTITIONED
      - keyword: BY
      - bracketed:
          start_bracket: (
          column_reference:
            identifier: col3
          data_type:
            data_type_identifier: integer
          end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: PARQUET
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col1
      - data_type:
          data_type_identifier: INTEGER
      - comma: ','
      - column_reference:
          identifier: col2
      - data_type:
          data_type_identifier: STRING
      - end_bracket: )
    - partitioned_by_segment:
      - keyword: PARTITIONED
      - keyword: BY
      - bracketed:
        - start_bracket: (
        - column_reference:
            identifier: col3
        - data_type:
            data_type_identifier: INTEGER
        - comma: ','
        - column_reference:
            identifier: col4
        - data_type:
            data_type_identifier: INTEGER
        - end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: PARQUET
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
- statement_terminator: ;
- statement:
    create_external_table_statement:
    - keyword: CREATE
    - keyword: EXTERNAL
    - keyword: TABLE
    - table_reference:
      - identifier: external_schema
      - dot: .
      - identifier: table_name
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: col1
        data_type:
          data_type_identifier: INTEGER
        end_bracket: )
    - keyword: STORED
    - keyword: AS
    - keyword: PARQUET
    - keyword: LOCATION
    - literal: "'s3://bucket/folder'"
    - keyword: TABLE
    - keyword: PROPERTIES
    - bracketed:
      - start_bracket: (
      - literal: "'some_property1'"
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: "'some_value1'"
      - comma: ','
      - literal: "'some_property2'"
      - comparison_operator:
          raw_comparison_operator: '='
      - literal: "'some_value2'"
      - end_bracket: )
- statement_terminator: ;
