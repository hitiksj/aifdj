# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 458e0eb72d649723778066a6cebd98c64ba6230b9853f9119f7603f2e5a79776
file:
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      into_clause:
        keyword: into
        table_reference:
          naked_identifier: newevent
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: event
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: username
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: lastname
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: sum
            bracketed:
              start_bracket: (
              expression:
              - column_reference:
                  naked_identifier: pricepaid
              - binary_operator: '-'
              - column_reference:
                  naked_identifier: commission
              end_bracket: )
          alias_expression:
            keyword: as
            naked_identifier: profit
      into_clause:
      - keyword: into
      - keyword: temp
      - keyword: table
      - table_reference:
          naked_identifier: profits
      from_clause:
      - keyword: from
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: sales
      - comma: ','
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: users
      where_clause:
        keyword: where
        expression:
        - column_reference:
          - naked_identifier: sales
          - dot: .
          - naked_identifier: sellerid
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
          - naked_identifier: users
          - dot: .
          - naked_identifier: userid
      groupby_clause:
      - keyword: group
      - keyword: by
      - numeric_literal: '1'
      - comma: ','
      - numeric_literal: '2'
      orderby_clause:
      - keyword: order
      - keyword: by
      - numeric_literal: '3'
      - keyword: desc
- statement_terminator: ;
