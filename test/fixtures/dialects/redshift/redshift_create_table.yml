# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 591319e3a9b11bf34b4683c091fd3010941ec982d9f68a54dea10404e72c4db6
file:
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: t1
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INTEGER
      - raw: PRIMARY
      - raw: KEY
      - comma: ','
      - raw: col2
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - raw: NOT
      - raw: 'NULL'
      - end_bracket: )
    - raw: DISTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
    - raw: SORTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: t1
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INTEGER
      - raw: PRIMARY
      - raw: KEY
      - comma: ','
      - raw: col2
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - raw: GENERATED
      - raw: BY
      - raw: DEFAULT
      - raw: AS
      - raw: IDENTITY
      - bracketed:
        - start_bracket: (
        - raw: '1'
        - comma: ','
        - raw: '1'
        - end_bracket: )
      - end_bracket: )
    - raw: DISTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
    - raw: SORTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: t1
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INTEGER
      - raw: PRIMARY
      - raw: KEY
      - comma: ','
      - raw: col2
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - comma: ','
      - raw: col3
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - comma: ','
      - raw: col4
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - comma: ','
      - raw: col5
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - comma: ','
      - raw: col6
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - end_bracket: )
    - raw: DISTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
    - raw: COMPOUND
    - raw: SORTKEY
    - bracketed:
      - start_bracket: (
      - raw: col4
      - comma: ','
      - raw: col5
      - comma: ','
      - raw: col6
      - end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: t1
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INTEGER
      - raw: PRIMARY
      - raw: KEY
      - comma: ','
      - raw: col2
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - raw: REFERENCES
      - raw: t2
      - bracketed:
          start_bracket: (
          raw: col1
          end_bracket: )
      - end_bracket: )
    - raw: DISTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
    - raw: SORTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: IF
    - raw: NOT
    - raw: EXISTS
    - raw: t1
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INTEGER
      - raw: PRIMARY
      - raw: KEY
      - comma: ','
      - raw: col2
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - end_bracket: )
    - raw: DISTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
    - raw: SORTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TEMPORARY
    - raw: TABLE
    - raw: t1
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INTEGER
      - raw: PRIMARY
      - raw: KEY
      - comma: ','
      - raw: col2
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - end_bracket: )
    - raw: DISTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
    - raw: SORTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TEMP
    - raw: TABLE
    - raw: t1
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INTEGER
      - raw: PRIMARY
      - raw: KEY
      - comma: ','
      - raw: col2
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - end_bracket: )
    - raw: DISTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
    - raw: SORTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: LOCAL
    - raw: TEMPORARY
    - raw: TABLE
    - raw: t1
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INTEGER
      - raw: UNIQUE
      - comma: ','
      - raw: col2
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - end_bracket: )
    - raw: BACKUP
    - raw: 'YES'
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TEMPORARY
    - raw: TABLE
    - raw: t1
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INTEGER
      - raw: PRIMARY
      - raw: KEY
      - comma: ','
      - raw: col2
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - end_bracket: )
    - raw: BACKUP
    - raw: 'NO'
    - raw: DISTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
    - raw: SORTKEY
    - bracketed:
      - start_bracket: (
      - raw: col1
      - comma: ','
      - raw: col2
      - end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: t1
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INTEGER
      - raw: ENCODE
      - raw: AZ64
      - raw: PRIMARY
      - raw: KEY
      - comma: ','
      - raw: col2
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - raw: ENCODE
      - raw: TEXT255
      - end_bracket: )
    - raw: DISTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
    - raw: SORTKEY
    - raw: AUTO
    - raw: DISTSTYLE
    - raw: EVEN
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: schema1
    - raw: .
    - raw: t1
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INTEGER
      - raw: ENCODE
      - raw: AZ64
      - raw: PRIMARY
      - raw: KEY
      - comma: ','
      - raw: col2
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - raw: ENCODE
      - raw: TEXT255
      - comma: ','
      - raw: col3
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - raw: COLLATE
      - raw: CASE_SENSITIVE
      - comma: ','
      - raw: col3
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '5'
          end_bracket: )
      - raw: COLLATE
      - raw: CASE_INSENSITIVE
      - end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: UniqueKey_demo
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INT
      - raw: NOT
      - raw: 'NULL'
      - raw: UNIQUE
      - comma: ','
      - raw: col2
      - raw: DATE
      - comma: ','
      - raw: col3
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '60'
          end_bracket: )
      - comma: ','
      - raw: UNIQUE
      - bracketed:
          start_bracket: (
          raw: col1
          end_bracket: )
      - end_bracket: )
    - raw: DISTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
    - raw: COMPOUND
    - raw: SORTKEY
    - bracketed:
      - start_bracket: (
      - raw: col1
      - comma: ','
      - raw: col2
      - end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TABLE
    - raw: UniqueKey_demo
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INT
      - raw: NOT
      - raw: 'NULL'
      - raw: UNIQUE
      - comma: ','
      - raw: col2
      - raw: DATE
      - comma: ','
      - raw: col3
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '60'
          end_bracket: )
      - comma: ','
      - raw: PRIMARY
      - raw: KEY
      - bracketed:
          start_bracket: (
          raw: col1
          end_bracket: )
      - end_bracket: )
    - raw: DISTKEY
    - bracketed:
        start_bracket: (
        raw: col1
        end_bracket: )
    - raw: INTERLEAVED
    - raw: SORTKEY
    - bracketed:
      - start_bracket: (
      - raw: col1
      - comma: ','
      - raw: col2
      - end_bracket: )
- statement_terminator: ;
- statement:
    unparsable:
    - raw: CREATE
    - raw: TEMP
    - raw: TABLE
    - raw: IF
    - raw: NOT
    - raw: EXISTS
    - raw: UniqueKey_demo
    - bracketed:
      - start_bracket: (
      - raw: col1
      - raw: INT
      - raw: NOT
      - raw: 'NULL'
      - raw: UNIQUE
      - comma: ','
      - raw: col2
      - raw: DATE
      - comma: ','
      - raw: col3
      - raw: VARCHAR
      - bracketed:
          start_bracket: (
          raw: '60'
          end_bracket: )
      - comma: ','
      - raw: FOREIGN
      - raw: KEY
      - bracketed:
          start_bracket: (
          raw: col3
          end_bracket: )
      - raw: REFERENCES
      - raw: t2
      - bracketed:
          start_bracket: (
          raw: col5
          end_bracket: )
      - end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TEMP
    - keyword: TABLE
    - table_reference:
        identifier: t1
    - bracketed:
        start_bracket: (
        keyword: LIKE
        table_reference:
        - identifier: schema1
        - dot: .
        - identifier: t2
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TEMP
    - keyword: TABLE
    - table_reference:
        identifier: t1
    - bracketed:
        start_bracket: (
        keyword: LIKE
        table_reference:
        - identifier: schema1
        - dot: .
        - identifier: t2
        like_option_segment:
        - keyword: INCLUDING
        - keyword: DEFAULTS
        end_bracket: )
- statement_terminator: ;
- statement:
    create_table_statement:
    - keyword: CREATE
    - keyword: TABLE
    - table_reference:
        identifier: t1
    - bracketed:
        start_bracket: (
        keyword: LIKE
        table_reference:
        - identifier: schema1
        - dot: .
        - identifier: t2
        like_option_segment:
        - keyword: EXCLUDING
        - keyword: DEFAULTS
        end_bracket: )
- statement_terminator: ;
