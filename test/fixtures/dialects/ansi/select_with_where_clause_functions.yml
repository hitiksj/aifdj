# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 7455cf4e932a1f45055e2b98d219cf6227ef6e37023639a31acd3ba0422a716a
file:
  statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          column_reference:
          - naked_identifier: t
          - dot: .
          - naked_identifier: column1
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: sch
              - dot: .
              - naked_identifier: table1
            alias_expression:
              keyword: as
              naked_identifier: t
      where_clause:
        keyword: where
        expression:
          column_reference:
          - naked_identifier: t
          - dot: .
          - naked_identifier: b_year
          keyword: in
          bracketed:
          - start_bracket: (
          - function:
              function_name:
                function_name_identifier: year
              bracketed:
                start_bracket: (
                expression:
                  function:
                    function_name:
                      function_name_identifier: getdate
                    bracketed:
                      start_bracket: (
                      end_bracket: )
                end_bracket: )
          - comma: ','
          - function:
              function_name:
                function_name_identifier: year
              bracketed:
                start_bracket: (
                expression:
                  function:
                    function_name:
                      function_name_identifier: getdate
                    bracketed:
                      start_bracket: (
                      end_bracket: )
                end_bracket: )
          - binary_operator: '-'
          - numeric_literal: '1'
          - end_bracket: )
  statement_terminator: ;
