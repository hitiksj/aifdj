# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 0f32ec651ada1b29e867beb33348e07fc6bbe1c625b6a089d92ddc451bd391af
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: y
          alias_expression:
            keyword: AS
            naked_identifier: woy
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              function:
                function_name:
                  function_name_identifier: UNNEST
                bracketed:
                  start_bracket: (
                  expression:
                    function:
                      function_name:
                        function_name_identifier: GENERATE_ARRAY
                      bracketed:
                      - start_bracket: (
                      - expression:
                          literal: '1'
                      - comma: ','
                      - expression:
                          literal: '53'
                      - end_bracket: )
                  end_bracket: )
            alias_expression:
              keyword: AS
              naked_identifier: y
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            naked_identifier: id
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: name
      from_clause:
      - keyword: FROM
      - from_expression:
          from_expression_element:
          - table_expression:
              function:
                function_name:
                  function_name_identifier: UNNEST
                bracketed:
                  start_bracket: (
                  expression:
                    array_literal:
                    - start_square_bracket: '['
                    - literal: '1'
                    - comma: ','
                    - literal: '2'
                    - comma: ','
                    - literal: '3'
                    - end_square_bracket: ']'
                  end_bracket: )
          - alias_expression:
              naked_identifier: id
          - keyword: WITH
          - keyword: OFFSET
          - alias_expression:
              naked_identifier: pos1
      - comma: ','
      - from_expression:
          from_expression_element:
          - table_expression:
              function:
                function_name:
                  function_name_identifier: UNNEST
                bracketed:
                  start_bracket: (
                  expression:
                    array_literal:
                    - start_square_bracket: '['
                    - literal: "'a'"
                    - comma: ','
                    - literal: "'b'"
                    - comma: ','
                    - literal: "'c'"
                    - end_square_bracket: ']'
                  end_bracket: )
          - alias_expression:
              naked_identifier: name
          - keyword: WITH
          - keyword: OFFSET
          - alias_expression:
              naked_identifier: pos2
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            naked_identifier: pos1
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
            naked_identifier: pos2
- statement_terminator: ;
