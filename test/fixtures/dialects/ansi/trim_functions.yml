# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 07214dfc654a54fa01f59d32c129ad3cf5a614556fd09deff2f76324c00a34ca
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: trim
            bracketed:
              start_bracket: (
              expression:
                quoted_literal: "'    SparkSQL   '"
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: trim
            bracketed:
            - start_bracket: (
            - keyword: BOTH
            - keyword: FROM
            - expression:
                quoted_literal: "'    SparkSQL   '"
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: trim
            bracketed:
            - start_bracket: (
            - keyword: LEADING
            - keyword: FROM
            - expression:
                quoted_literal: "'    SparkSQL   '"
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: trim
            bracketed:
            - start_bracket: (
            - keyword: TRAILING
            - keyword: FROM
            - expression:
                quoted_literal: "'    SparkSQL   '"
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: trim
            bracketed:
            - start_bracket: (
            - expression:
                quoted_literal: "'SL'"
            - keyword: FROM
            - expression:
                quoted_literal: "'SSparkSQLS'"
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: trim
            bracketed:
            - start_bracket: (
            - keyword: BOTH
            - expression:
                quoted_literal: "'SL'"
            - keyword: FROM
            - expression:
                quoted_literal: "'SSparkSQLS'"
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: trim
            bracketed:
            - start_bracket: (
            - keyword: LEADING
            - expression:
                quoted_literal: "'SL'"
            - keyword: FROM
            - expression:
                quoted_literal: "'SSparkSQLS'"
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: trim
            bracketed:
            - start_bracket: (
            - keyword: TRAILING
            - expression:
                quoted_literal: "'SL'"
            - keyword: FROM
            - expression:
                quoted_literal: "'SSparkSQLS'"
            - end_bracket: )
- statement_terminator: ;
