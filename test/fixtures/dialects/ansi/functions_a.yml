# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: cb8f2324d81a33c2bbaf0941282ef28e437e4a203b8d0d94081e7a69fa638370
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: DATE
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: t
              end_bracket: )
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: ROUND
            bracketed:
            - start_bracket: (
            - expression:
                column_reference:
                  naked_identifier: b
            - comma: ','
            - expression:
                literal: '2'
            - end_bracket: )
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: LEFT
            bracketed:
            - start_bracket: (
            - expression:
                function:
                  function_name:
                    function_name_identifier: right
                  bracketed:
                  - start_bracket: (
                  - expression:
                      column_reference:
                        naked_identifier: s
                  - comma: ','
                  - expression:
                      literal: '5'
                  - end_bracket: )
            - comma: ','
            - expression:
                function:
                  function_name:
                    function_name_identifier: LEN
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        naked_identifier: s
                      binary_operator: +
                      literal: '6'
                    end_bracket: )
            - end_bracket: )
          alias_expression:
            keyword: as
            naked_identifier: compound
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: tbl_b
