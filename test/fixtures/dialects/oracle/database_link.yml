# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: b124903ad8acbe8db908220d7601a6334e7f1c56458e3b20a694152f85e291ba
file:
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: foo
              - at_sign: '@'
              - naked_identifier: bar
      where_clause:
        keyword: where
        expression:
        - numeric_literal: '1'
        - comparison_operator:
            raw_comparison_operator: '='
        - numeric_literal: '1'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          column_reference:
          - naked_identifier: baz
          - dot: .
          - naked_identifier: name
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
              - naked_identifier: foo
              - at_sign: '@'
              - naked_identifier: bar
            alias_expression:
              naked_identifier: baz
      where_clause:
        keyword: where
        expression:
        - numeric_literal: '1'
        - comparison_operator:
            raw_comparison_operator: '='
        - numeric_literal: '1'
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
            - function_name_identifier: function_a
            - at_sign: '@'
            - function_name_identifier: orcl
            bracketed:
              start_bracket: (
              end_bracket: )
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: dual
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          function:
            function_name:
            - naked_identifier: pkg_test
            - dot: .
            - function_name_identifier: function_a
            - at_sign: '@'
            - function_name_identifier: orcl
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '1'
              end_bracket: )
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: dual
- statement_terminator: ;
