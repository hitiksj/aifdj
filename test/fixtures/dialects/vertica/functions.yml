# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 8e7ed0fb7265cd3c13569812aa5897cd016640086dfdec33bfd4a3dc129136e9
file:
  statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            naked_identifier: col1
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: col2
      - comma: ','
      - select_clause_element:
          column_reference:
            naked_identifier: col3
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: mapkeys
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: complex_col
              end_bracket: )
            over_clause:
              keyword: over
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: partition
                  - keyword: by
                  - expression:
                      column_reference:
                        naked_identifier: col1
                  - comma: ','
                  - expression:
                      column_reference:
                        naked_identifier: col2
                  - comma: ','
                  - expression:
                      column_reference:
                        naked_identifier: col3
                end_bracket: )
          alias_expression:
            keyword: as
            bracketed:
              start_bracket: (
              identifier_list:
                naked_identifier: aliased_complex_col
              end_bracket: )
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: split_docs
