# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: dc13748eee073f670b223e70b836c4b3a44527ee42b16787d43b2f1771a1b2d2
file:
- base:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                bracketed:
                - start_bracket: (
                - literal: '1'
                - comma: ','
                - literal: '2'
                - end_bracket: )
                alias_expression:
                  keyword: as
                  bracketed:
                    start_bracket: (
                    identifier_list:
                    - identifier: a
                    - comma: ','
                    - identifier: b
                    end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                bracketed:
                - start_bracket: (
                - literal: '1'
                - comma: ','
                - literal: '2'
                - end_bracket: )
                alias_expression:
                  keyword: as
                  identifier: t
                  bracketed:
                    start_bracket: (
                    identifier_list:
                    - identifier: a
                    - comma: ','
                    - identifier: b
                    end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                bracketed:
                - start_bracket: (
                - literal: '1'
                - comma: ','
                - literal: '2'
                - end_bracket: )
                alias_expression:
                  identifier: t
                  bracketed:
                    start_bracket: (
                    identifier_list:
                    - identifier: a
                    - comma: ','
                    - identifier: b
                    end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                bracketed:
                - start_bracket: (
                - literal: '1'
                - comma: ','
                - literal: '2'
                - end_bracket: )
                alias_expression:
                  bracketed:
                    start_bracket: (
                    identifier_list:
                    - identifier: a
                    - comma: ','
                    - identifier: b
                    end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        unparsable:
        - keyword: from
        - raw: values
        - bracketed:
          - start_bracket: (
          - literal: '1'
          - comma: ','
          - literal: '2'
          - end_bracket: )
        - comma: ','
        - bracketed:
          - start_bracket: (
          - raw: '3'
          - comma: ','
          - raw: '4'
          - end_bracket: )
        - raw: as
        - bracketed:
          - start_bracket: (
          - raw: a
          - comma: ','
          - raw: b
          - end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        unparsable:
        - keyword: from
        - raw: values
        - bracketed:
          - start_bracket: (
          - literal: '1'
          - comma: ','
          - literal: '2'
          - end_bracket: )
        - comma: ','
        - bracketed:
          - start_bracket: (
          - raw: '3'
          - comma: ','
          - raw: '4'
          - end_bracket: )
        - raw: as
        - raw: t
        - bracketed:
          - start_bracket: (
          - raw: a
          - comma: ','
          - raw: b
          - end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        unparsable:
        - keyword: from
        - raw: values
        - bracketed:
          - start_bracket: (
          - literal: '1'
          - comma: ','
          - literal: '2'
          - end_bracket: )
        - comma: ','
        - bracketed:
          - start_bracket: (
          - raw: '3'
          - comma: ','
          - raw: '4'
          - end_bracket: )
        - raw: t
        - bracketed:
          - start_bracket: (
          - raw: a
          - comma: ','
          - raw: b
          - end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        unparsable:
        - keyword: from
        - raw: values
        - bracketed:
          - start_bracket: (
          - literal: '1'
          - comma: ','
          - literal: '2'
          - end_bracket: )
        - comma: ','
        - bracketed:
          - start_bracket: (
          - raw: '3'
          - comma: ','
          - raw: '4'
          - end_bracket: )
        - bracketed:
          - start_bracket: (
          - raw: a
          - comma: ','
          - raw: b
          - end_bracket: )
- statement_terminator: ;
