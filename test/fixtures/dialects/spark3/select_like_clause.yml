# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 86ba7d44959c1174dd19a0febb1337652cdcb7d0a15f8bf443143aa009c27883
file:
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: name
          keyword: LIKE
          literal: "'M%'"
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: name
          keyword: LIKE
          literal: "'M_ry'"
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: name
        - keyword: NOT
        - keyword: LIKE
        - literal: "'M_ry'"
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: name
          keyword: RLIKE
          literal: "'M+'"
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: name
          keyword: REGEXP
          literal: "'M+'"
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
            identifier: name
          keyword: LIKE
          literal: "'%\\_%'"
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: name
        - keyword: LIKE
        - literal: "'%$_%'"
        - keyword: ESCAPE
        - literal: "'$'"
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: name
        - keyword: LIKE
        - keyword: ALL
        - bracketed:
          - start_bracket: (
          - literal: "'%an%'"
          - comma: ','
          - literal: "'%an'"
          - end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: name
        - keyword: LIKE
        - keyword: ANY
        - bracketed:
          - start_bracket: (
          - literal: "'%an%'"
          - comma: ','
          - literal: "'%an'"
          - end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: name
        - keyword: LIKE
        - keyword: SOME
        - bracketed:
          - start_bracket: (
          - literal: "'%an%'"
          - comma: ','
          - literal: "'%an'"
          - end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: name
        - keyword: NOT
        - keyword: LIKE
        - keyword: ALL
        - bracketed:
          - start_bracket: (
          - literal: "'%an%'"
          - comma: ','
          - literal: "'%an'"
          - end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: name
        - keyword: NOT
        - keyword: LIKE
        - keyword: ANY
        - bracketed:
          - start_bracket: (
          - literal: "'%an%'"
          - comma: ','
          - literal: "'%an'"
          - end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: a
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: b
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: person
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: name
        - keyword: NOT
        - keyword: LIKE
        - keyword: SOME
        - bracketed:
          - start_bracket: (
          - literal: "'%an%'"
          - comma: ','
          - literal: "'%an'"
          - end_bracket: )
- statement_terminator: ;
