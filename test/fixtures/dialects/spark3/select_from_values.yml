# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d58591a92aa2407b4f0e821092a36b46ef76ea711506bd31fb734b31445583cc
file:
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                delimited_values:
                  scalar_value:
                    literal: '1'
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                delimited_values:
                  tuple_value:
                    bracketed:
                      start_bracket: (
                      scalar_value:
                        literal: '1'
                      end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                delimited_values:
                  tuple_value:
                    bracketed:
                    - start_bracket: (
                    - scalar_value:
                        literal: '1'
                    - comma: ','
                    - scalar_value:
                        literal: '2'
                    - end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - scalar_value:
                      literal: '1'
                  - comma: ','
                  - scalar_value:
                      literal: '2'
                  - comma: ','
                  - scalar_value:
                      literal: '3'
              end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - tuple_value:
                      bracketed:
                        start_bracket: (
                        scalar_value:
                          literal: '1'
                        end_bracket: )
                  - comma: ','
                  - tuple_value:
                      bracketed:
                        start_bracket: (
                        scalar_value:
                          literal: '2'
                        end_bracket: )
                  - comma: ','
                  - tuple_value:
                      bracketed:
                        start_bracket: (
                        scalar_value:
                          literal: '3'
                        end_bracket: )
              end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '1'
                      - comma: ','
                      - scalar_value:
                          literal: '2'
                      - end_bracket: )
                  - comma: ','
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '3'
                      - comma: ','
                      - scalar_value:
                          literal: '4'
                      - end_bracket: )
              end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
      - keyword: from
      - from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                delimited_values:
                  scalar_value:
                    literal: '1'
      - comma: ','
      - from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                delimited_values:
                  scalar_value:
                    literal: '2'
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
      - keyword: from
      - from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '1'
                      - comma: ','
                      - scalar_value:
                          literal: '2'
                      - end_bracket: )
                  - comma: ','
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '3'
                      - comma: ','
                      - scalar_value:
                          literal: '4'
                      - end_bracket: )
              end_bracket: )
      - comma: ','
      - from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '1'
                      - comma: ','
                      - scalar_value:
                          literal: '2'
                      - end_bracket: )
                  - comma: ','
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '3'
                      - comma: ','
                      - scalar_value:
                          literal: '4'
                      - end_bracket: )
              end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - scalar_value:
                      literal: '1'
                  - comma: ','
                  - scalar_value:
                      function:
                        function_name:
                          function_name_identifier: least
                        bracketed:
                        - start_bracket: (
                        - expression:
                            literal: '2'
                        - comma: ','
                        - expression:
                            literal: '3'
                        - end_bracket: )
                  - comma: ','
                  - scalar_value:
                      function:
                        function_name:
                          function_name_identifier: greatest
                        bracketed:
                        - start_bracket: (
                        - expression:
                            literal: '4'
                        - comma: ','
                        - expression:
                            literal: '5'
                        - end_bracket: )
              end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                delimited_values:
                  scalar_value:
                    literal: '1'
                alias_expression:
                  keyword: as
                  identifier: t
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                delimited_values:
                  tuple_value:
                    bracketed:
                    - start_bracket: (
                    - scalar_value:
                        literal: '1'
                    - comma: ','
                    - scalar_value:
                        literal: '2'
                    - end_bracket: )
                alias_expression:
                  keyword: as
                  identifier: t
                  bracketed:
                    start_bracket: (
                    identifier_list:
                    - identifier: a
                    - comma: ','
                    - identifier: b
                    end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '1'
                      - comma: ','
                      - scalar_value:
                          literal: '2'
                      - end_bracket: )
                  - comma: ','
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '3'
                      - comma: ','
                      - scalar_value:
                          literal: '4'
                      - end_bracket: )
              end_bracket: )
            alias_expression:
              keyword: as
              identifier: t
              bracketed:
                start_bracket: (
                identifier_list:
                - identifier: a
                - comma: ','
                - identifier: b
                end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '1'
                      - comma: ','
                      - scalar_value:
                          literal: '2'
                      - end_bracket: )
                  - comma: ','
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '3'
                      - comma: ','
                      - scalar_value:
                          literal: '4'
                      - end_bracket: )
              end_bracket: )
            alias_expression:
              keyword: as
              bracketed:
                start_bracket: (
                identifier_list:
                - identifier: a
                - comma: ','
                - identifier: b
                end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                delimited_values:
                  scalar_value:
                    literal: '1'
                alias_expression:
                  unparsable:
                    identifier: t
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              values_clause:
                keyword: values
                delimited_values:
                  tuple_value:
                    bracketed:
                    - start_bracket: (
                    - scalar_value:
                        literal: '1'
                    - comma: ','
                    - scalar_value:
                        literal: '2'
                    - end_bracket: )
                alias_expression:
                  unparsable:
                    identifier: t
                    bracketed:
                      start_bracket: (
                      identifier_list:
                      - identifier: a
                      - comma: ','
                      - identifier: b
                      end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '1'
                      - comma: ','
                      - scalar_value:
                          literal: '2'
                      - end_bracket: )
                  - comma: ','
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '3'
                      - comma: ','
                      - scalar_value:
                          literal: '4'
                      - end_bracket: )
              end_bracket: )
            alias_expression:
              unparsable:
                identifier: t
                bracketed:
                  start_bracket: (
                  identifier_list:
                  - identifier: a
                  - comma: ','
                  - identifier: b
                  end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '1'
                      - comma: ','
                      - scalar_value:
                          literal: '2'
                      - end_bracket: )
                  - comma: ','
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '3'
                      - comma: ','
                      - scalar_value:
                          literal: '4'
                      - end_bracket: )
              end_bracket: )
            alias_expression:
              unparsable:
                bracketed:
                  start_bracket: (
                  identifier_list:
                  - identifier: a
                  - comma: ','
                  - identifier: b
                  end_bracket: )
- statement_terminator: ;
