# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 745f2b85d275e7e551e23ef5745a3cfabdd06bccc4dc2d9bf49ac13333a19162
file:
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            bracketed:
              start_bracket: (
              table_expression:
                values_clause:
                  keyword: values
                  delimited_values:
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '1'
                      - comma: ','
                      - scalar_value:
                          literal: '2'
                      - end_bracket: )
                  - comma: ','
                  - tuple_value:
                      bracketed:
                      - start_bracket: (
                      - scalar_value:
                          literal: '3'
                      - comma: ','
                      - scalar_value:
                          literal: '4'
                      - end_bracket: )
              end_bracket: )
- statement_terminator: ;
- base:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        unparsable:
        - keyword: from
        - raw: values
        - bracketed:
          - start_bracket: (
          - raw: '1'
          - comma: ','
          - raw: '2'
          - end_bracket: )
        - comma: ','
        - bracketed:
          - start_bracket: (
          - raw: '3'
          - comma: ','
          - raw: '4'
          - end_bracket: )
- statement_terminator: ;
