# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: f6ebeb0f2e31eb62b7cbec5f29559737c406d958eabb7334ce5f9c6d66b20700
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
          - naked_identifier: gmv
          - dot: .
          - naked_identifier: _merchant_key
      - comma: ','
      - select_clause_element:
          column_reference:
          - naked_identifier: gmv
          - dot: .
          - naked_identifier: order_created_at
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: EXTRACT
            bracketed:
              start_bracket: (
              date_part: DAY
              keyword: FROM
              expression:
                column_reference:
                - naked_identifier: gmv
                - dot: .
                - naked_identifier: order_created_at
              end_bracket: )
          alias_expression:
            keyword: AS
            naked_identifier: order_day
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                naked_identifier: my_table
            alias_expression:
              keyword: as
              naked_identifier: gmv
      where_clause:
        keyword: WHERE
        expression:
          column_reference:
          - naked_identifier: gmv
          - dot: .
          - naked_identifier: datetime
          comparison_operator:
          - raw_comparison_operator: '>'
          - raw_comparison_operator: '='
          function:
            function_name:
              function_name_identifier: DATE_TRUNC
            bracketed:
              start_bracket: (
              expression:
                function:
                  function_name:
                    function_name_identifier: DATE_SUB
                  bracketed:
                  - start_bracket: (
                  - expression:
                      function:
                        function_name:
                          function_name_identifier: CURRENT_DATE
                        bracketed:
                          start_bracket: (
                          end_bracket: )
                  - comma: ','
                  - expression:
                      interval_expression:
                        keyword: INTERVAL
                        expression:
                          numeric_literal: '2'
                        date_part: YEAR
                  - end_bracket: )
              comma: ','
              date_part: year
              end_bracket: )
      limit_clause:
        keyword: LIMIT
        numeric_literal: '1'
