# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 8d92ad10c4a461c38e571eba188de3adf2dbfbbce7bbbf4abb26b49f90b18b27
file:
- multi_statement_segment:
    begin_statement:
    - keyword: BEGIN
    - statement:
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              wildcard_expression:
                wildcard_identifier:
                  star: '*'
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    naked_identifier: one_table
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- statement:
    declare_segment:
    - keyword: DECLARE
    - naked_identifier: x
    - data_type:
        data_type_identifier: INT64
    - keyword: DEFAULT
    - numeric_literal: '10'
- statement_terminator: ;
- statement:
    transaction_statement:
      keyword: BEGIN
- statement:
    declare_segment:
      keyword: DECLARE
      naked_identifier: y
      data_type:
        data_type_identifier: INT64
- statement_terminator: ;
- statement:
    set_segment:
      keyword: SET
      naked_identifier: y
      comparison_operator:
        raw_comparison_operator: '='
      expression:
        column_reference:
          naked_identifier: x
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: y
- statement_terminator: ;
- statement:
    transaction_statement:
      keyword: END
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          column_reference:
            naked_identifier: x
- statement_terminator: ;
- multi_statement_segment:
    begin_statement:
    - keyword: BEGIN
    - statement:
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              expression:
              - numeric_literal: '1'
              - binary_operator: /
              - numeric_literal: '0'
    - statement_terminator: ;
    - keyword: EXCEPTION
    - keyword: WHEN
    - keyword: ERROR
    - keyword: THEN
    - statement:
        raise_statement:
        - keyword: RAISE
        - keyword: USING
        - keyword: MESSAGE
        - comparison_operator:
            raw_comparison_operator: '='
        - expression:
            quoted_literal: '"An error happened"'
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
- multi_statement_segment:
    begin_statement:
    - keyword: BEGIN
    - statement:
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              expression:
              - numeric_literal: '100'
              - binary_operator: /
              - numeric_literal: '0'
    - statement_terminator: ;
    - keyword: EXCEPTION
    - keyword: WHEN
    - keyword: ERROR
    - keyword: THEN
    - statement:
        raise_statement:
        - keyword: RAISE
        - keyword: USING
        - keyword: MESSAGE
        - comparison_operator:
            raw_comparison_operator: '='
        - expression:
            function:
              function_name:
                function_name_identifier: FORMAT
              bracketed:
              - start_bracket: (
              - expression:
                  quoted_literal: '"Something went wrong: %s"'
              - comma: ','
              - expression:
                  system_variable:
                    double_at_sign_literal: '@@error'
                  semi_structured_expression:
                    dot: .
                    naked_identifier: message
              - end_bracket: )
    - statement_terminator: ;
    - keyword: END
- statement_terminator: ;
