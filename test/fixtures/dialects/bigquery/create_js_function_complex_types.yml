# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 2a9fb25f37a507a705e3e12b3cb8a48cac10c161235b595779629e6d1577cd46
file:
  statement:
    create_function_statement:
    - keyword: CREATE
    - keyword: TEMP
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: qs
    - function_parameter_list:
        bracketed:
        - start_bracket: (
        - parameter: foo1
        - data_type:
            data_type_identifier: INT64
        - comma: ','
        - parameter: foo2
        - data_type:
            keyword: ARRAY
            start_angle_bracket: <
            data_type:
              data_type_identifier: STRING
            end_angle_bracket: '>'
        - comma: ','
        - parameter: foo3
        - data_type:
            keyword: STRUCT
            start_angle_bracket: <
            parameter: x
            data_type:
              data_type_identifier: INT64
            end_angle_bracket: '>'
        - comma: ','
        - parameter: foo4
        - data_type:
          - keyword: STRUCT
          - start_angle_bracket: <
          - parameter: x
          - data_type:
              data_type_identifier: INT64
          - comma: ','
          - parameter: y
          - data_type:
              data_type_identifier: INT64
          - end_angle_bracket: '>'
        - comma: ','
        - parameter: foo5
        - data_type:
          - keyword: STRUCT
          - start_angle_bracket: <
          - parameter: a
          - data_type:
              keyword: ARRAY
              start_angle_bracket: <
              data_type:
                data_type_identifier: FLOAT
              end_angle_bracket: '>'
          - comma: ','
          - parameter: b
          - data_type:
            - keyword: STRUCT
            - start_angle_bracket: <
            - parameter: x
            - data_type:
                data_type_identifier: INT64
            - comma: ','
            - parameter: y
            - data_type:
                data_type_identifier: INT64
            - end_angle_bracket: '>'
          - end_angle_bracket: '>'
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
        keyword: STRUCT
        start_angle_bracket: <
        parameter: product_id
        data_type:
          keyword: ARRAY
          start_angle_bracket: <
          data_type:
            data_type_identifier: INT64
          end_angle_bracket: '>'
        end_angle_bracket: '>'
    - function_definition:
      - keyword: LANGUAGE
      - parameter: js
      - keyword: AS
      - udf_body: "\"\"\"\n    CODE GOES HERE\n\"\"\""
