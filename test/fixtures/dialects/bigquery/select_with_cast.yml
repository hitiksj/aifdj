# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 610929197500be6e6afbabe65745f88a5167d5ad1c2c5759bc97e40677ecc2f9
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: CAST
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '1'
              keyword: AS
              data_type:
                data_type_identifier: FLOAT64
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: SAFE_CAST
            bracketed:
              start_bracket: (
              expression:
                numeric_literal: '1.0'
              keyword: AS
              data_type:
                data_type_identifier: INT64
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: CAST
            bracketed:
              start_bracket: (
              expression:
                typed_array_literal:
                  array_type:
                    keyword: ARRAY
                  array_literal:
                    start_square_bracket: '['
                    quoted_literal: '"element1"'
                    end_square_bracket: ']'
              keyword: AS
              data_type:
                array_type:
                  keyword: ARRAY
                  start_angle_bracket: <
                  data_type:
                    data_type_identifier: STRING
                  end_angle_bracket: '>'
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: CAST
            bracketed:
            - start_bracket: (
            - expression:
                quoted_literal: "b'\\x48\\x65\\x6c\\x6c\\x6f'"
            - keyword: AS
            - data_type:
                data_type_identifier: STRING
            - expression:
                data_type:
                  data_type_identifier: FORMAT
                quoted_literal: "'ASCII'"
            - end_bracket: )
          alias_expression:
            keyword: AS
            naked_identifier: bytes_to_string
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: CAST
            bracketed:
            - start_bracket: (
            - expression:
                keyword: TIMESTAMP
                date_constructor_literal: "'2008-12-25 00:00:00+00:00'"
            - keyword: AS
            - data_type:
                data_type_identifier: STRING
            - expression:
                data_type:
                  data_type_identifier: FORMAT
                quoted_literal: "'YYYY-MM-DD HH24:MI:SS TZH:TZM'"
            - end_bracket: )
          alias_expression:
            keyword: AS
            naked_identifier: date_time_to_string
- statement_terminator: ;
