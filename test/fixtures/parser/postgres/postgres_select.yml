# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: ada399298b0380d94a6941414410ee12cd69b9018e7b335d1837e3637c6819df
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - data_type:
            - keyword: timestamp
            - keyword: with
            - keyword: time
            - keyword: zone
          - literal: "'2005-04-02 12:00:00-07'"
          - binary_operator: +
          - keyword: interval
          - literal: "'1 day'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: DATEADD
            bracketed:
            - start_bracket: (
            - expression:
                column_reference:
                  identifier: day
            - comma: ','
            - expression:
                numeric_literal:
                  binary_operator: '-'
                  literal: '2'
            - comma: ','
            - expression:
                bare_function: current_date
            - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
          - data_type:
              data_type_identifier: timestamptz
          - literal: "'2013-07-01 12:00:00'"
          - binary_operator: '-'
          - data_type:
              data_type_identifier: timestamptz
          - literal: "'2013-03-01 12:00:00'"
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          expression:
            literal: '1.0'
            cast_expression:
              casting_operator: '::'
              data_type:
                data_type_identifier: int
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: venuestate
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: venueseats
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: venuename
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: first_value
            bracketed:
            - start_bracket: (
            - expression:
                column_reference:
                  identifier: venuename
            - keyword: ignore
            - keyword: nulls
            - end_bracket: )
            over_clause:
              keyword: over
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: partition
                  - keyword: by
                  - expression:
                      column_reference:
                        identifier: venuestate
                  orderby_clause:
                  - keyword: order
                  - keyword: by
                  - column_reference:
                      identifier: venueseats
                  - keyword: desc
                  frame_clause:
                  - keyword: rows
                  - keyword: between
                  - keyword: unbounded
                  - keyword: preceding
                  - binary_operator: and
                  - keyword: unbounded
                  - keyword: following
                end_bracket: )
          alias_expression:
            keyword: as
            identifier: col_name
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: table_name
- statement_terminator: ;
