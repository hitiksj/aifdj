# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 5a9f5758efc007ceeb3c6ae245e019882d5147613bafa94f6d6fab5f82b69136
file:
- statement:
    create_function_statement:
    - keyword: CREATE
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: add
    - base:
        bracketed:
        - start_bracket: (
        - data_type:
            data_type_identifier: integer
        - comma: ','
        - data_type:
            data_type_identifier: integer
        - end_bracket: )
    - keyword: RETURNS
    - data_type:
        data_type_identifier: integer
    - base:
      - keyword: AS
      - literal: "'select $1 + $2;'"
      - keyword: LANGUAGE
      - parameter: SQL
- statement_terminator: ;
- statement:
    create_function_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: increment
    - base:
        bracketed:
          start_bracket: (
          parameter: i
          data_type:
            data_type_identifier: integer
          end_bracket: )
    - keyword: RETURNS
    - data_type:
        data_type_identifier: integer
    - base:
      - keyword: AS
      - literal: "'\n    BEGIN\n        RETURN i + 1;\n    END;\n'"
      - keyword: LANGUAGE
      - parameter: plpgsql
      - keyword: VOLATILE
- statement_terminator: ;
- statement:
    create_function_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: increment
    - base:
        bracketed:
          start_bracket: (
          parameter: i
          data_type:
            data_type_identifier: integer
          end_bracket: )
    - keyword: RETURNS
    - data_type:
        data_type_identifier: integer
    - base:
      - keyword: AS
      - literal: "'\n    BEGIN\n        RETURN i + 1;\n    END;\n'"
      - keyword: LANGUAGE
      - parameter: plpgsql
      - keyword: WINDOW
      - keyword: IMMUTABLE
      - keyword: STABLE
      - keyword: LEAKPROOF
      - keyword: RETURNS
      - keyword: 'NULL'
      - keyword: 'ON'
      - keyword: 'NULL'
      - keyword: INPUT
      - keyword: EXTERNAL
      - keyword: SECURITY
      - keyword: DEFINER
      - keyword: ROWS
      - literal: '5'
      - keyword: SET
      - parameter: test_param
      - comparison_operator: '='
      - literal: '3'
- statement_terminator: ;
- statement:
    create_function_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: increment
    - base:
        bracketed:
          start_bracket: (
          parameter: i
          data_type:
            data_type_identifier: integer
          end_bracket: )
    - keyword: RETURNS
    - data_type:
        data_type_identifier: integer
    - base:
      - keyword: AS
      - literal: "'C:\\\\my_file.c'"
      - comma: ','
      - literal: "'symlink_c'"
      - keyword: LANGUAGE
      - parameter: plpgsql
      - keyword: WINDOW
      - keyword: IMMUTABLE
      - keyword: STABLE
      - keyword: NOT
      - keyword: LEAKPROOF
      - keyword: CALLED
      - keyword: 'ON'
      - keyword: 'NULL'
      - keyword: INPUT
      - keyword: EXTERNAL
      - keyword: SECURITY
      - keyword: DEFINER
      - keyword: COST
      - literal: '123'
      - keyword: ROWS
      - literal: '5'
      - keyword: SET
      - parameter: test_param
      - comparison_operator: '='
      - literal: '3'
      - keyword: WITH
      - bracketed:
          start_bracket: (
          parameter: isStrict
          end_bracket: )
- statement_terminator: ;
- statement:
    create_function_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: increment
    - base:
        bracketed:
          start_bracket: (
          parameter: i
          data_type:
            data_type_identifier: integer
          end_bracket: )
    - keyword: RETURNS
    - data_type:
        data_type_identifier: integer
    - base:
      - keyword: PARALLEL
      - keyword: UNSAFE
      - keyword: AS
      - literal: "'\n    BEGIN\n        RETURN i + 1;\n    END;\n'"
      - keyword: LANGUAGE
      - parameter: plpgsql
      - keyword: SUPPORT
      - parameter: my_function
- statement_terminator: ;
