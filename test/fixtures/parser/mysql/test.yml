file:
- statement:
    delimiter_statement:
      keyword: delimiter
- statement_terminator: '~'
- statement:
    drop_statement:
    - keyword: drop
    - keyword: procedure
    - keyword: if
    - keyword: exists
    - table_reference:
        identifier: '`zproc_workflow_status_complete`'
- statement_terminator: '~'
- statement:
    create_procedure_statement:
    - keyword: create
    - keyword: procedure
    - function_name:
        identifier: '`zproc_workflow_status_complete`'
    - base:
        bracketed:
        - start_bracket: (
        - parameter: '`_in_workflow_id`'
        - data_type:
            data_type_identifier: bigint
            bracketed:
              start_bracket: (
              expression:
                literal: '20'
              end_bracket: )
        - comma: ','
        - parameter: '`_in_status`'
        - data_type:
            data_type_identifier: varchar
            bracketed:
              start_bracket: (
              expression:
                literal: '32'
              end_bracket: )
        - comma: ','
        - parameter_direction: out
        - parameter: _out_err_msg
        - data_type:
            data_type_identifier: varchar
            bracketed:
              start_bracket: (
              expression:
                literal: '1024'
              end_bracket: )
        - end_bracket: )
    - base:
        transaction_statement:
          identifier: z_proc
          colon: ':'
          keyword: begin
          statement:
            if_then_statement:
            - keyword: if
            - expression:
                bracketed:
                  start_bracket: (
                  expression:
                    select_statement:
                      select_clause:
                        keyword: select
                        select_clause_element:
                          function:
                            function_name:
                              function_name_identifier: count
                            bracketed:
                              start_bracket: (
                              star: '*'
                              end_bracket: )
                      from_clause:
                        keyword: from
                        from_expression:
                          from_expression_element:
                            table_expression:
                              table_reference:
                                identifier: xworkflow_rtq
                      where_clause:
                        keyword: where
                        expression:
                        - column_reference:
                            identifier: id
                        - comparison_operator: '='
                        - column_reference:
                            identifier: _in_workflow_id
                  end_bracket: )
                comparison_operator: '='
                literal: '0'
            - keyword: then
            - statement:
                set_statement:
                  keyword: set
                  variable: '@errmsg'
                  comparison_operator: '='
                  function:
                    function_name:
                      function_name_identifier: concat
                    bracketed:
                    - start_bracket: (
                    - expression:
                        literal: "'input workflow id not found ('"
                    - comma: ','
                    - expression:
                        column_reference:
                          identifier: _in_workflow_id
                    - comma: ','
                    - expression:
                        literal: "'), '"
                    - comma: ','
                    - expression:
                        function:
                          function_name:
                            function_name_identifier: sysdate
                          bracketed:
                            start_bracket: (
                            expression:
                              literal: '6'
                            end_bracket: )
                    - end_bracket: )
- statement_terminator: ;
- statement:
    transaction_statement:
      keyword: leave
      identifier: z_block
- statement_terminator: ;
- statement:
    transaction_statement:
      keyword: end
      identifier: if
- statement_terminator: ;
- statement:
    transaction_statement:
      keyword: end
      identifier: z_proc
- statement_terminator: '~'
- statement:
    delimiter_statement:
      keyword: delimiter
- statement_terminator: ;
