# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 7f98469e366e82df67d7e016dbbb0459813af48459b70f6de3e7e5cd60e3b7ba
file:
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: DeptID
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: DeptName
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: DeptMgrID
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: EmpID
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: EmpLastName
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: EmpSalary
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: Departments
            alias_expression:
              identifier: d
        unparsable:
        - raw: CROSS
        - raw: APPLY
        - raw: dbo
        - raw: .
        - raw: GetReports
        - bracketed:
          - start_bracket: (
          - raw: d
          - raw: .
          - raw: DeptMgrID
          - end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: Department
            alias_expression:
              identifier: D
          join_clause:
          - keyword: OUTER
          - keyword: APPLY
          - from_expression_element:
              table_expression:
                function:
                  function_name:
                    identifier: dbo
                    dot: .
                    function_name_identifier: fn_GetAllEmployeeOfADepartment
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                      - identifier: D
                      - dot: .
                      - identifier: DepartmentID
                    end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
          - identifier: s
          - dot: .
          - identifier: column_id
      - comma: ','
      - select_clause_element:
          column_reference:
          - identifier: sp
          - dot: .
          - identifier: value
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: table1
            alias_expression:
              keyword: as
              identifier: s
        unparsable:
        - raw: cross
        - raw: apply
        - raw: string_split
        - bracketed:
          - start_bracket: (
          - raw: replace
          - bracketed:
            - start_bracket: (
            - raw: s
            - raw: .
            - raw: some_path
            - comma: ','
            - raw: "'->'"
            - comma: ','
            - raw: "'{'"
            - end_bracket: )
          - comma: ','
          - raw: "'{'"
          - end_bracket: )
        - raw: as
        - raw: sp
- statement_terminator: ;
