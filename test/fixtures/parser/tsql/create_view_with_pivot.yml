# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 2c729b9d77f53508b12ce1aab4176818e178c86ad01947ddf88011612e521f0d
file:
  statement:
    create_view_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: ALTER
    - keyword: VIEW
    - object_reference:
      - identifier: DEST
      - dot: .
      - identifier: V_HOSPITAL_ADMISSIONS_OVERTIME_BYAGEGROUP
    - keyword: AS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            literal: "'AverageCost'"
            alias_expression:
              keyword: AS
              identifier: Cost_Sorted_By_Production_Days
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: '[0]'
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: '[1]'
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: '[2]'
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: '[3]'
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: '[4]'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                bracketed:
                  start_bracket: (
                  select_statement:
                    select_clause:
                    - keyword: SELECT
                    - select_clause_element:
                        column_reference:
                          identifier: DaysToManufacture
                    - comma: ','
                    - select_clause_element:
                        column_reference:
                          identifier: StandardCost
                    from_clause:
                      keyword: FROM
                      from_expression:
                        from_expression_element:
                          table_expression:
                            table_reference:
                            - identifier: Production
                            - dot: .
                            - identifier: Product
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: SourceTable
        pivotunpivot_segment:
        - keyword: PIVOT
        - bracketed:
          - start_bracket: (
          - function:
              function_name:
                function_name_identifier: AVG
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    identifier: StandardCost
                end_bracket: )
          - keyword: FOR
          - column_reference:
              identifier: DaysToManufacture
          - keyword: IN
          - bracketed:
            - start_bracket: (
            - column_reference:
                identifier: '[0]'
            - comma: ','
            - column_reference:
                identifier: '[1]'
            - comma: ','
            - column_reference:
                identifier: '[2]'
            - comma: ','
            - column_reference:
                identifier: '[3]'
            - comma: ','
            - column_reference:
                identifier: '[4]'
            - end_bracket: )
          - end_bracket: )
        - keyword: AS
        - table_reference:
            identifier: PivotTable
  statement_terminator: ;
