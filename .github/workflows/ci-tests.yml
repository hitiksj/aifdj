#############################
## GitHub Actions CI Tests ##
#############################
#
# Our preferred CI usage is Circle CI but this acts as
# alternative if not available.
#
# This Workflow can be enabled and disabled in the  Actions
# tab: https://github.com/sqlfluff/sqlfluff/actions
#
name: "Run CI Tests"
on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '**.png'
      - '**.md'
      - '**.rst'
jobs:
  linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jobs: [ 'linting', 'doclinting' ]
    name: ${{ matrix.jobs }} tests
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install -Ur requirements.txt -Ur requirements_dev.txt
        python setup.py develop
        pip install tox
    - name: Set Tox Params
      run: |
        echo "TOXENV=${{ matrix.jobs }}" >> $GITHUB_ENV
        echo "UPLOAD_COVERAGE=0" >> $GITHUB_ENV
    - name: Run the tests
      run: |
        tox -e ${{ env.TOXENV }}
  python-version-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9' ]
    name: Python ${{ matrix.python-version }} tests
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -Ur requirements.txt -Ur requirements_dev.txt
        python setup.py develop
        pip install tox
    - name: Set Tox Python Param
      run: |
        echo 'TOXENV<<EOF' >> $GITHUB_ENV
        echo "${{ matrix.python-version }}" | sed "s/\.//" | sed "s/^/py/" >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    - name: Run the tests
      run: |
        tox -e ${{ env.TOXENV }}
    - name: Upload Coverage Report
      uses: codecov/codecov-action@v1
      with:
        files: ./coverage.xml
  other-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jobs: [ 'bench', 'mypy' ]
    name: ${{ matrix.jobs }} tests
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install -Ur requirements.txt -Ur requirements_dev.txt
        python setup.py develop
        pip install tox
    - name: Set Tox Params
      run: |
        echo "TOXENV=${{ matrix.jobs }}" >> $GITHUB_ENV
    - name: Run the tests
      run: |
        tox -e ${{ env.TOXENV }}
  examples:
    runs-on: ubuntu-latest
    name: example tests
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        pip install -Ur requirements.txt -Ur requirements_dev.txt
        python setup.py develop
        pip install tox
    - name: Test the example files
      run: |
        for file in examples/*
        do
          echo "Running $file"
          python "$file"
        done
  dbt-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dbt-version: [ 'dbt018', 'dbt019', 'dbt020' ]
    name: DBT ${{ matrix.dbt-version }} tests
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        pip install -Ur requirements.txt -Ur requirements_dev.txt
        python setup.py develop
        pip install tox
    - name: Run the tests
      run: |
        tox -e ${{ matrix.dbt-version }} -- -m dbt
    - name: Upload Coverage Report
      uses: codecov/codecov-action@v1
      with:
        files: ./coverage.xml

