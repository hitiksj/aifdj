[tox]
envlist = linting, doclinting, cov-init, py36, py37, py38, py39, cov-report, bench

[testenv]
passenv = CI CIRCLECI CIRCLE_*
usedevelop = true
deps =
    -rrequirements.txt
    pytest
    pytest-cov
    # Requests is required for the util script
    requests
# Include any other steps necessary for testing below.
# {posargs} is there to allow us to specify specific tests, which
# can then be invoked from tox by calling e.g.
# tox -e py35 -- project/tests/test_file.py::TestClassName::test_method
commands =
    python util.py clean-tests
    pytest -vv --cov --cov-report=xml --junitxml=.test-reports/junit.xml {posargs}
setenv =
    COVERAGE_FILE = .coverage.{envname}

[testenv:cov-init]
setenv =
    COVERAGE_FILE = .coverage
deps = coverage
commands =
    coverage erase

[testenv:bench]
deps =
    # cdfifflib means that benchmarks run faster
    cdifflib
    # Requests is required for the util script
    requests
commands =
    python util.py benchmark -f benchmarks/benchmarks.yml

[testenv:cov-report]
setenv =
    COVERAGE_FILE = .coverage
deps = coverage
commands =
    coverage combine
    coverage report

[testenv:linting]
deps =
    flake8
    flake8-docstrings
    flake8-black
commands = flake8

[testenv:doclinting]
deps =
    doc8
    pygments
commands = doc8 docs/source --file-encoding utf8

[flake8]
# Ignore:
# E501: Long lines
# W503: Line breaks before binary operators
# D107: Don't require docstrings on __init__
# D105: Don't require docstrings on magic methods
ignore = E501, W503, D107, D105
exclude = .git,__pycache__,env,.tox,build,.venv,venv
max-line-length = 88
extend-ignore =
    # See https://github.com/PyCQA/pycodestyle/issues/373
    E203,
# sqlfluff uses flake8-docstrings https://pypi.org/project/flake8-docstrings/
# this is to assist with the sphinx based autodoc
docstring-convention = google

[pytest]
python_files = *_test.py
testpaths = test
junit_family = legacy

[coverage:run]
source = src/sqlfluff
